#
# The Jira Cloud platform REST API
# Jira Cloud platform REST API documentation
# Version: 1001.0.0-SNAPSHOT-23ad6c5456aade2d59a4e9437ce49c945df2eb8f
# Contact: ecosystem@atlassian.com
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

Describe -tag 'PSJira' -name 'WorkflowSchemesApi' {
    Context 'New-WorkflowScheme' {
        It 'Test New-WorkflowScheme' {
            #$TestResult = New-WorkflowScheme -WorkflowScheme "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-DeleteDefaultWorkflow' {
        It 'Test Invoke-DeleteDefaultWorkflow' {
            #$TestResult = Invoke-DeleteDefaultWorkflow -Id "TEST_VALUE" -UpdateDraftIfNeeded "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-DeleteWorkflowMapping' {
        It 'Test Invoke-DeleteWorkflowMapping' {
            #$TestResult = Invoke-DeleteWorkflowMapping -Id "TEST_VALUE" -WorkflowName "TEST_VALUE" -UpdateDraftIfNeeded "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-DeleteWorkflowScheme' {
        It 'Test Invoke-DeleteWorkflowScheme' {
            #$TestResult = Invoke-DeleteWorkflowScheme -Id "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-DeleteWorkflowSchemeIssueType' {
        It 'Test Invoke-DeleteWorkflowSchemeIssueType' {
            #$TestResult = Invoke-DeleteWorkflowSchemeIssueType -Id "TEST_VALUE" -IssueType "TEST_VALUE" -UpdateDraftIfNeeded "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-AllWorkflowSchemes' {
        It 'Test Get-AllWorkflowSchemes' {
            #$TestResult = Get-AllWorkflowSchemes -StartAt "TEST_VALUE" -MaxResults "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-DefaultWorkflow' {
        It 'Test Get-DefaultWorkflow' {
            #$TestResult = Get-DefaultWorkflow -Id "TEST_VALUE" -ReturnDraftIfExists "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-Workflow' {
        It 'Test Get-Workflow' {
            #$TestResult = Get-Workflow -Id "TEST_VALUE" -WorkflowName "TEST_VALUE" -ReturnDraftIfExists "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-WorkflowScheme' {
        It 'Test Get-WorkflowScheme' {
            #$TestResult = Get-WorkflowScheme -Id "TEST_VALUE" -ReturnDraftIfExists "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-WorkflowSchemeIssueType' {
        It 'Test Get-WorkflowSchemeIssueType' {
            #$TestResult = Get-WorkflowSchemeIssueType -Id "TEST_VALUE" -IssueType "TEST_VALUE" -ReturnDraftIfExists "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Read-WorkflowSchemes' {
        It 'Test Read-WorkflowSchemes' {
            #$TestResult = Read-WorkflowSchemes -WorkflowSchemeReadRequest "TEST_VALUE" -Expand "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Set-WorkflowSchemeIssueType' {
        It 'Test Set-WorkflowSchemeIssueType' {
            #$TestResult = Set-WorkflowSchemeIssueType -Id "TEST_VALUE" -IssueType "TEST_VALUE" -IssueTypeWorkflowMapping "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Update-DefaultWorkflow' {
        It 'Test Update-DefaultWorkflow' {
            #$TestResult = Update-DefaultWorkflow -Id "TEST_VALUE" -DefaultWorkflow "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Update-Schemes' {
        It 'Test Update-Schemes' {
            #$TestResult = Update-Schemes -WorkflowSchemeUpdateRequest "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Update-WorkflowMapping' {
        It 'Test Update-WorkflowMapping' {
            #$TestResult = Update-WorkflowMapping -Id "TEST_VALUE" -WorkflowName "TEST_VALUE" -IssueTypesWorkflowMapping "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Update-WorkflowScheme' {
        It 'Test Update-WorkflowScheme' {
            #$TestResult = Update-WorkflowScheme -Id "TEST_VALUE" -WorkflowScheme "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Update-WorkflowSchemeMappings' {
        It 'Test Update-WorkflowSchemeMappings' {
            #$TestResult = Update-WorkflowSchemeMappings -WorkflowSchemeUpdateRequiredMappingsRequest "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

}
