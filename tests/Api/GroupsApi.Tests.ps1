#
# The Jira Cloud platform REST API
# Jira Cloud platform REST API documentation
# Version: 1001.0.0-SNAPSHOT-23ad6c5456aade2d59a4e9437ce49c945df2eb8f
# Contact: ecosystem@atlassian.com
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

Describe -tag 'PSJira' -name 'GroupsApi' {
    Context 'Add-UserToGroup' {
        It 'Test Add-UserToGroup' {
            #$TestResult = Add-UserToGroup -UpdateUserToGroupBean "TEST_VALUE" -Groupname "TEST_VALUE" -GroupId "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-BulkGetGroups' {
        It 'Test Invoke-BulkGetGroups' {
            #$TestResult = Invoke-BulkGetGroups -StartAt "TEST_VALUE" -MaxResults "TEST_VALUE" -GroupId "TEST_VALUE" -GroupName "TEST_VALUE" -AccessType "TEST_VALUE" -ApplicationKey "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-Group' {
        It 'Test New-Group' {
            #$TestResult = New-Group -AddGroupBean "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Find-Groups' {
        It 'Test Find-Groups' {
            #$TestResult = Find-Groups -AccountId "TEST_VALUE" -Query "TEST_VALUE" -Exclude "TEST_VALUE" -ExcludeId "TEST_VALUE" -MaxResults "TEST_VALUE" -CaseInsensitive "TEST_VALUE" -UserName "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-Group' {
        It 'Test Get-Group' {
            #$TestResult = Get-Group -Groupname "TEST_VALUE" -GroupId "TEST_VALUE" -Expand "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-UsersFromGroup' {
        It 'Test Get-UsersFromGroup' {
            #$TestResult = Get-UsersFromGroup -Groupname "TEST_VALUE" -GroupId "TEST_VALUE" -IncludeInactiveUsers "TEST_VALUE" -StartAt "TEST_VALUE" -MaxResults "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Remove-Group' {
        It 'Test Remove-Group' {
            #$TestResult = Remove-Group -Groupname "TEST_VALUE" -GroupId "TEST_VALUE" -SwapGroup "TEST_VALUE" -SwapGroupId "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Remove-UserFromGroup' {
        It 'Test Remove-UserFromGroup' {
            #$TestResult = Remove-UserFromGroup -AccountId "TEST_VALUE" -Groupname "TEST_VALUE" -GroupId "TEST_VALUE" -Username "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

}
