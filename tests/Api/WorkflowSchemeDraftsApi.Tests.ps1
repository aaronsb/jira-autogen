#
# The Jira Cloud platform REST API
# Jira Cloud platform REST API documentation
# Version: 1001.0.0-SNAPSHOT-23ad6c5456aade2d59a4e9437ce49c945df2eb8f
# Contact: ecosystem@atlassian.com
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

Describe -tag 'PSJira' -name 'WorkflowSchemeDraftsApi' {
    Context 'New-WorkflowSchemeDraftFromParent' {
        It 'Test New-WorkflowSchemeDraftFromParent' {
            #$TestResult = New-WorkflowSchemeDraftFromParent -Id "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-DeleteDraftDefaultWorkflow' {
        It 'Test Invoke-DeleteDraftDefaultWorkflow' {
            #$TestResult = Invoke-DeleteDraftDefaultWorkflow -Id "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-DeleteDraftWorkflowMapping' {
        It 'Test Invoke-DeleteDraftWorkflowMapping' {
            #$TestResult = Invoke-DeleteDraftWorkflowMapping -Id "TEST_VALUE" -WorkflowName "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-DeleteWorkflowSchemeDraft' {
        It 'Test Invoke-DeleteWorkflowSchemeDraft' {
            #$TestResult = Invoke-DeleteWorkflowSchemeDraft -Id "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-DeleteWorkflowSchemeDraftIssueType' {
        It 'Test Invoke-DeleteWorkflowSchemeDraftIssueType' {
            #$TestResult = Invoke-DeleteWorkflowSchemeDraftIssueType -Id "TEST_VALUE" -IssueType "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-DraftDefaultWorkflow' {
        It 'Test Get-DraftDefaultWorkflow' {
            #$TestResult = Get-DraftDefaultWorkflow -Id "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-DraftWorkflow' {
        It 'Test Get-DraftWorkflow' {
            #$TestResult = Get-DraftWorkflow -Id "TEST_VALUE" -WorkflowName "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-WorkflowSchemeDraft' {
        It 'Test Get-WorkflowSchemeDraft' {
            #$TestResult = Get-WorkflowSchemeDraft -Id "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-WorkflowSchemeDraftIssueType' {
        It 'Test Get-WorkflowSchemeDraftIssueType' {
            #$TestResult = Get-WorkflowSchemeDraftIssueType -Id "TEST_VALUE" -IssueType "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Publish-DraftWorkflowScheme' {
        It 'Test Publish-DraftWorkflowScheme' {
            #$TestResult = Publish-DraftWorkflowScheme -Id "TEST_VALUE" -PublishDraftWorkflowScheme "TEST_VALUE" -ValidateOnly "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Set-WorkflowSchemeDraftIssueType' {
        It 'Test Set-WorkflowSchemeDraftIssueType' {
            #$TestResult = Set-WorkflowSchemeDraftIssueType -Id "TEST_VALUE" -IssueType "TEST_VALUE" -IssueTypeWorkflowMapping "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Update-DraftDefaultWorkflow' {
        It 'Test Update-DraftDefaultWorkflow' {
            #$TestResult = Update-DraftDefaultWorkflow -Id "TEST_VALUE" -DefaultWorkflow "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Update-DraftWorkflowMapping' {
        It 'Test Update-DraftWorkflowMapping' {
            #$TestResult = Update-DraftWorkflowMapping -Id "TEST_VALUE" -WorkflowName "TEST_VALUE" -IssueTypesWorkflowMapping "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Update-WorkflowSchemeDraft' {
        It 'Test Update-WorkflowSchemeDraft' {
            #$TestResult = Update-WorkflowSchemeDraft -Id "TEST_VALUE" -WorkflowScheme "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

}
