#
# The Jira Cloud platform REST API
# Jira Cloud platform REST API documentation
# Version: 1001.0.0-SNAPSHOT-23ad6c5456aade2d59a4e9437ce49c945df2eb8f
# Contact: ecosystem@atlassian.com
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

The response for status request for a running/completed export task.

.PARAMETER FileUrl
No description available.
.PARAMETER Payload
No description available.
.PARAMETER Progress
No description available.
.PARAMETER Status
No description available.
.PARAMETER SubmittedTime
No description available.
.PARAMETER TaskId
No description available.
.OUTPUTS

ExportArchivedIssuesTaskProgressResponse<PSCustomObject>
#>

function Initialize-ExportArchivedIssuesTaskProgressResponse {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${FileUrl},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${Payload},
        [Parameter(Position = 2, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int64]]
        ${Progress},
        [Parameter(Position = 3, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${Status},
        [Parameter(Position = 4, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[System.DateTime]]
        ${SubmittedTime},
        [Parameter(Position = 5, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${TaskId}
    )

    Process {
        'Creating PSCustomObject: PSJira => ExportArchivedIssuesTaskProgressResponse' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug


        $PSO = [PSCustomObject]@{
            "fileUrl" = ${FileUrl}
            "payload" = ${Payload}
            "progress" = ${Progress}
            "status" = ${Status}
            "submittedTime" = ${SubmittedTime}
            "taskId" = ${TaskId}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to ExportArchivedIssuesTaskProgressResponse<PSCustomObject>

.DESCRIPTION

Convert from JSON to ExportArchivedIssuesTaskProgressResponse<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

ExportArchivedIssuesTaskProgressResponse<PSCustomObject>
#>
function ConvertFrom-JsonToExportArchivedIssuesTaskProgressResponse {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSJira => ExportArchivedIssuesTaskProgressResponse' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in ExportArchivedIssuesTaskProgressResponse
        $AllProperties = ("fileUrl", "payload", "progress", "status", "submittedTime", "taskId")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "fileUrl"))) { #optional property not found
            $FileUrl = $null
        } else {
            $FileUrl = $JsonParameters.PSobject.Properties["fileUrl"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "payload"))) { #optional property not found
            $Payload = $null
        } else {
            $Payload = $JsonParameters.PSobject.Properties["payload"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "progress"))) { #optional property not found
            $Progress = $null
        } else {
            $Progress = $JsonParameters.PSobject.Properties["progress"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "status"))) { #optional property not found
            $Status = $null
        } else {
            $Status = $JsonParameters.PSobject.Properties["status"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "submittedTime"))) { #optional property not found
            $SubmittedTime = $null
        } else {
            $SubmittedTime = $JsonParameters.PSobject.Properties["submittedTime"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "taskId"))) { #optional property not found
            $TaskId = $null
        } else {
            $TaskId = $JsonParameters.PSobject.Properties["taskId"].value
        }

        $PSO = [PSCustomObject]@{
            "fileUrl" = ${FileUrl}
            "payload" = ${Payload}
            "progress" = ${Progress}
            "status" = ${Status}
            "submittedTime" = ${SubmittedTime}
            "taskId" = ${TaskId}
        }

        return $PSO
    }

}

