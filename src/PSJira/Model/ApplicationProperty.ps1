#
# The Jira Cloud platform REST API
# Jira Cloud platform REST API documentation
# Version: 1001.0.0-SNAPSHOT-23ad6c5456aade2d59a4e9437ce49c945df2eb8f
# Contact: ecosystem@atlassian.com
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

Details of an application property.

.PARAMETER AllowedValues
The allowed values, if applicable.
.PARAMETER DefaultValue
The default value of the application property.
.PARAMETER Desc
The description of the application property.
.PARAMETER Example
No description available.
.PARAMETER Id
The ID of the application property. The ID and key are the same.
.PARAMETER Key
The key of the application property. The ID and key are the same.
.PARAMETER Name
The name of the application property.
.PARAMETER Type
The data type of the application property.
.PARAMETER Value
The new value.
.OUTPUTS

ApplicationProperty<PSCustomObject>
#>

function Initialize-ApplicationProperty {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [String[]]
        ${AllowedValues},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${DefaultValue},
        [Parameter(Position = 2, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${Desc},
        [Parameter(Position = 3, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${Example},
        [Parameter(Position = 4, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${Id},
        [Parameter(Position = 5, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${Key},
        [Parameter(Position = 6, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${Name},
        [Parameter(Position = 7, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${Type},
        [Parameter(Position = 8, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${Value}
    )

    Process {
        'Creating PSCustomObject: PSJira => ApplicationProperty' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug


        $PSO = [PSCustomObject]@{
            "allowedValues" = ${AllowedValues}
            "defaultValue" = ${DefaultValue}
            "desc" = ${Desc}
            "example" = ${Example}
            "id" = ${Id}
            "key" = ${Key}
            "name" = ${Name}
            "type" = ${Type}
            "value" = ${Value}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to ApplicationProperty<PSCustomObject>

.DESCRIPTION

Convert from JSON to ApplicationProperty<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

ApplicationProperty<PSCustomObject>
#>
function ConvertFrom-JsonToApplicationProperty {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSJira => ApplicationProperty' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in ApplicationProperty
        $AllProperties = ("allowedValues", "defaultValue", "desc", "example", "id", "key", "name", "type", "value")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "allowedValues"))) { #optional property not found
            $AllowedValues = $null
        } else {
            $AllowedValues = $JsonParameters.PSobject.Properties["allowedValues"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "defaultValue"))) { #optional property not found
            $DefaultValue = $null
        } else {
            $DefaultValue = $JsonParameters.PSobject.Properties["defaultValue"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "desc"))) { #optional property not found
            $Desc = $null
        } else {
            $Desc = $JsonParameters.PSobject.Properties["desc"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "example"))) { #optional property not found
            $Example = $null
        } else {
            $Example = $JsonParameters.PSobject.Properties["example"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "id"))) { #optional property not found
            $Id = $null
        } else {
            $Id = $JsonParameters.PSobject.Properties["id"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "key"))) { #optional property not found
            $Key = $null
        } else {
            $Key = $JsonParameters.PSobject.Properties["key"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "name"))) { #optional property not found
            $Name = $null
        } else {
            $Name = $JsonParameters.PSobject.Properties["name"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "type"))) { #optional property not found
            $Type = $null
        } else {
            $Type = $JsonParameters.PSobject.Properties["type"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "value"))) { #optional property not found
            $Value = $null
        } else {
            $Value = $JsonParameters.PSobject.Properties["value"].value
        }

        $PSO = [PSCustomObject]@{
            "allowedValues" = ${AllowedValues}
            "defaultValue" = ${DefaultValue}
            "desc" = ${Desc}
            "example" = ${Example}
            "id" = ${Id}
            "key" = ${Key}
            "name" = ${Name}
            "type" = ${Type}
            "value" = ${Value}
        }

        return $PSO
    }

}

