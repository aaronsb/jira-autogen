#
# The Jira Cloud platform REST API
# Jira Cloud platform REST API documentation
# Version: 1001.0.0-SNAPSHOT-23ad6c5456aade2d59a4e9437ce49c945df2eb8f
# Contact: ecosystem@atlassian.com
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

Details about the mapping between an issue type and a workflow.

.PARAMETER IssueType
The ID of the issue type. Not required if updating the issue type-workflow mapping.
.PARAMETER UpdateDraftIfNeeded
Set to true to create or update the draft of a workflow scheme and update the mapping in the draft, when the workflow scheme cannot be edited. Defaults to `false`. Only applicable when updating the workflow-issue types mapping.
.PARAMETER Workflow
The name of the workflow.
.OUTPUTS

IssueTypeWorkflowMapping<PSCustomObject>
#>

function Initialize-IssueTypeWorkflowMapping {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${IssueType},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Boolean]]
        ${UpdateDraftIfNeeded},
        [Parameter(Position = 2, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${Workflow}
    )

    Process {
        'Creating PSCustomObject: PSJira => IssueTypeWorkflowMapping' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug


        $PSO = [PSCustomObject]@{
            "issueType" = ${IssueType}
            "updateDraftIfNeeded" = ${UpdateDraftIfNeeded}
            "workflow" = ${Workflow}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to IssueTypeWorkflowMapping<PSCustomObject>

.DESCRIPTION

Convert from JSON to IssueTypeWorkflowMapping<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

IssueTypeWorkflowMapping<PSCustomObject>
#>
function ConvertFrom-JsonToIssueTypeWorkflowMapping {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSJira => IssueTypeWorkflowMapping' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in IssueTypeWorkflowMapping
        $AllProperties = ("issueType", "updateDraftIfNeeded", "workflow")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "issueType"))) { #optional property not found
            $IssueType = $null
        } else {
            $IssueType = $JsonParameters.PSobject.Properties["issueType"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "updateDraftIfNeeded"))) { #optional property not found
            $UpdateDraftIfNeeded = $null
        } else {
            $UpdateDraftIfNeeded = $JsonParameters.PSobject.Properties["updateDraftIfNeeded"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "workflow"))) { #optional property not found
            $Workflow = $null
        } else {
            $Workflow = $JsonParameters.PSobject.Properties["workflow"].value
        }

        $PSO = [PSCustomObject]@{
            "issueType" = ${IssueType}
            "updateDraftIfNeeded" = ${UpdateDraftIfNeeded}
            "workflow" = ${Workflow}
        }

        return $PSO
    }

}

