#
# The Jira Cloud platform REST API
# Jira Cloud platform REST API documentation
# Version: 1001.0.0-SNAPSHOT-23ad6c5456aade2d59a4e9437ce49c945df2eb8f
# Contact: ecosystem@atlassian.com
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

Details of the workflow and its transition rules.

.PARAMETER Expand
Use expand to include additional information in the response. This parameter accepts `transition` which, for each rule, returns information about the transition the rule is assigned to.
.PARAMETER RuleIds
The list of workflow rule IDs.
.PARAMETER WorkflowEntityId
The workflow ID.
.OUTPUTS

WorkflowRulesSearch<PSCustomObject>
#>

function Initialize-WorkflowRulesSearch {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${Expand},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [String[]]
        ${RuleIds},
        [Parameter(Position = 2, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${WorkflowEntityId}
    )

    Process {
        'Creating PSCustomObject: PSJira => WorkflowRulesSearch' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        if ($null -eq $RuleIds) {
            throw "invalid value for 'RuleIds', 'RuleIds' cannot be null."
        }

        if ($RuleIds.length -gt 10) {
            throw "invalid value for 'RuleIds', number of items must be less than or equal to 10."
        }

        if ($RuleIds.length -lt 1) {
            throw "invalid value for 'RuleIds', number of items must be greater than or equal to 1."
        }

        if ($null -eq $WorkflowEntityId) {
            throw "invalid value for 'WorkflowEntityId', 'WorkflowEntityId' cannot be null."
        }


        $PSO = [PSCustomObject]@{
            "expand" = ${Expand}
            "ruleIds" = ${RuleIds}
            "workflowEntityId" = ${WorkflowEntityId}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to WorkflowRulesSearch<PSCustomObject>

.DESCRIPTION

Convert from JSON to WorkflowRulesSearch<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

WorkflowRulesSearch<PSCustomObject>
#>
function ConvertFrom-JsonToWorkflowRulesSearch {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSJira => WorkflowRulesSearch' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in WorkflowRulesSearch
        $AllProperties = ("expand", "ruleIds", "workflowEntityId")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        If ([string]::IsNullOrEmpty($Json) -or $Json -eq "{}") { # empty json
            throw "Error! Empty JSON cannot be serialized due to the required property 'ruleIds' missing."
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "ruleIds"))) {
            throw "Error! JSON cannot be serialized due to the required property 'ruleIds' missing."
        } else {
            $RuleIds = $JsonParameters.PSobject.Properties["ruleIds"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "workflowEntityId"))) {
            throw "Error! JSON cannot be serialized due to the required property 'workflowEntityId' missing."
        } else {
            $WorkflowEntityId = $JsonParameters.PSobject.Properties["workflowEntityId"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "expand"))) { #optional property not found
            $Expand = $null
        } else {
            $Expand = $JsonParameters.PSobject.Properties["expand"].value
        }

        $PSO = [PSCustomObject]@{
            "expand" = ${Expand}
            "ruleIds" = ${RuleIds}
            "workflowEntityId" = ${WorkflowEntityId}
        }

        return $PSO
    }

}

