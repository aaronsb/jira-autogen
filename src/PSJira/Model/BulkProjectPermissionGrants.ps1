#
# The Jira Cloud platform REST API
# Jira Cloud platform REST API documentation
# Version: 1001.0.0-SNAPSHOT-23ad6c5456aade2d59a4e9437ce49c945df2eb8f
# Contact: ecosystem@atlassian.com
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

List of project permissions and the projects and issues those permissions grant access to.

.PARAMETER Issues
IDs of the issues the user has the permission for.
.PARAMETER Permission
A project permission,
.PARAMETER Projects
IDs of the projects the user has the permission for.
.OUTPUTS

BulkProjectPermissionGrants<PSCustomObject>
#>

function Initialize-BulkProjectPermissionGrants {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [Int64[]]
        ${Issues},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${Permission},
        [Parameter(Position = 2, ValueFromPipelineByPropertyName = $true)]
        [Int64[]]
        ${Projects}
    )

    Process {
        'Creating PSCustomObject: PSJira => BulkProjectPermissionGrants' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        if ($null -eq $Issues) {
            throw "invalid value for 'Issues', 'Issues' cannot be null."
        }

        if ($null -eq $Permission) {
            throw "invalid value for 'Permission', 'Permission' cannot be null."
        }

        if ($null -eq $Projects) {
            throw "invalid value for 'Projects', 'Projects' cannot be null."
        }


        $PSO = [PSCustomObject]@{
            "issues" = ${Issues}
            "permission" = ${Permission}
            "projects" = ${Projects}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to BulkProjectPermissionGrants<PSCustomObject>

.DESCRIPTION

Convert from JSON to BulkProjectPermissionGrants<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

BulkProjectPermissionGrants<PSCustomObject>
#>
function ConvertFrom-JsonToBulkProjectPermissionGrants {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSJira => BulkProjectPermissionGrants' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in BulkProjectPermissionGrants
        $AllProperties = ("issues", "permission", "projects")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        If ([string]::IsNullOrEmpty($Json) -or $Json -eq "{}") { # empty json
            throw "Error! Empty JSON cannot be serialized due to the required property 'issues' missing."
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "issues"))) {
            throw "Error! JSON cannot be serialized due to the required property 'issues' missing."
        } else {
            $Issues = $JsonParameters.PSobject.Properties["issues"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "permission"))) {
            throw "Error! JSON cannot be serialized due to the required property 'permission' missing."
        } else {
            $Permission = $JsonParameters.PSobject.Properties["permission"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "projects"))) {
            throw "Error! JSON cannot be serialized due to the required property 'projects' missing."
        } else {
            $Projects = $JsonParameters.PSobject.Properties["projects"].value
        }

        $PSO = [PSCustomObject]@{
            "issues" = ${Issues}
            "permission" = ${Permission}
            "projects" = ${Projects}
        }

        return $PSO
    }

}

