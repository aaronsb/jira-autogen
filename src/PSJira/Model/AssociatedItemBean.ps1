#
# The Jira Cloud platform REST API
# Jira Cloud platform REST API documentation
# Version: 1001.0.0-SNAPSHOT-23ad6c5456aade2d59a4e9437ce49c945df2eb8f
# Contact: ecosystem@atlassian.com
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

Details of an item associated with the changed record.

.PARAMETER Id
The ID of the associated record.
.PARAMETER Name
The name of the associated record.
.PARAMETER ParentId
The ID of the associated parent record.
.PARAMETER ParentName
The name of the associated parent record.
.PARAMETER TypeName
The type of the associated record.
.OUTPUTS

AssociatedItemBean<PSCustomObject>
#>

function Initialize-AssociatedItemBean {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${Id},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${Name},
        [Parameter(Position = 2, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${ParentId},
        [Parameter(Position = 3, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${ParentName},
        [Parameter(Position = 4, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${TypeName}
    )

    Process {
        'Creating PSCustomObject: PSJira => AssociatedItemBean' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug


        $PSO = [PSCustomObject]@{
            "id" = ${Id}
            "name" = ${Name}
            "parentId" = ${ParentId}
            "parentName" = ${ParentName}
            "typeName" = ${TypeName}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to AssociatedItemBean<PSCustomObject>

.DESCRIPTION

Convert from JSON to AssociatedItemBean<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

AssociatedItemBean<PSCustomObject>
#>
function ConvertFrom-JsonToAssociatedItemBean {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSJira => AssociatedItemBean' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in AssociatedItemBean
        $AllProperties = ("id", "name", "parentId", "parentName", "typeName")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "id"))) { #optional property not found
            $Id = $null
        } else {
            $Id = $JsonParameters.PSobject.Properties["id"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "name"))) { #optional property not found
            $Name = $null
        } else {
            $Name = $JsonParameters.PSobject.Properties["name"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "parentId"))) { #optional property not found
            $ParentId = $null
        } else {
            $ParentId = $JsonParameters.PSobject.Properties["parentId"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "parentName"))) { #optional property not found
            $ParentName = $null
        } else {
            $ParentName = $JsonParameters.PSobject.Properties["parentName"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "typeName"))) { #optional property not found
            $TypeName = $null
        } else {
            $TypeName = $JsonParameters.PSobject.Properties["typeName"].value
        }

        $PSO = [PSCustomObject]@{
            "id" = ${Id}
            "name" = ${Name}
            "parentId" = ${ParentId}
            "parentName" = ${ParentName}
            "typeName" = ${TypeName}
        }

        return $PSO
    }

}

