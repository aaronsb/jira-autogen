#
# The Jira Cloud platform REST API
# Jira Cloud platform REST API documentation
# Version: 1001.0.0-SNAPSHOT-23ad6c5456aade2d59a4e9437ce49c945df2eb8f
# Contact: ecosystem@atlassian.com
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

No description available.

.PARAMETER AboveLevelId
The ID of the level above this one in the hierarchy. This property is deprecated, see [Change notice: Removing hierarchy level IDs from next-gen APIs](https://developer.atlassian.com/cloud/jira/platform/change-notice-removing-hierarchy-level-ids-from-next-gen-apis/).
.PARAMETER BelowLevelId
The ID of the level below this one in the hierarchy. This property is deprecated, see [Change notice: Removing hierarchy level IDs from next-gen APIs](https://developer.atlassian.com/cloud/jira/platform/change-notice-removing-hierarchy-level-ids-from-next-gen-apis/).
.PARAMETER ExternalUuid
The external UUID of the hierarchy level. This property is deprecated, see [Change notice: Removing hierarchy level IDs from next-gen APIs](https://developer.atlassian.com/cloud/jira/platform/change-notice-removing-hierarchy-level-ids-from-next-gen-apis/).
.PARAMETER HierarchyLevelNumber
No description available.
.PARAMETER Id
The ID of the hierarchy level. This property is deprecated, see [Change notice: Removing hierarchy level IDs from next-gen APIs](https://developer.atlassian.com/cloud/jira/platform/change-notice-removing-hierarchy-level-ids-from-next-gen-apis/).
.PARAMETER IssueTypeIds
The issue types available in this hierarchy level.
.PARAMETER Level
The level of this item in the hierarchy.
.PARAMETER Name
The name of this hierarchy level.
.PARAMETER ProjectConfigurationId
The ID of the project configuration. This property is deprecated, see [Change oticen: Removing hierarchy level IDs from next-gen APIs](https://developer.atlassian.com/cloud/jira/platform/change-notice-removing-hierarchy-level-ids-from-next-gen-apis/).
.OUTPUTS

SimplifiedHierarchyLevel<PSCustomObject>
#>

function Initialize-SimplifiedHierarchyLevel {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int64]]
        ${AboveLevelId},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int64]]
        ${BelowLevelId},
        [Parameter(Position = 2, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${ExternalUuid},
        [Parameter(Position = 3, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int32]]
        ${HierarchyLevelNumber},
        [Parameter(Position = 4, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int64]]
        ${Id},
        [Parameter(Position = 5, ValueFromPipelineByPropertyName = $true)]
        [Int64[]]
        ${IssueTypeIds},
        [Parameter(Position = 6, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int32]]
        ${Level},
        [Parameter(Position = 7, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${Name},
        [Parameter(Position = 8, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int64]]
        ${ProjectConfigurationId}
    )

    Process {
        'Creating PSCustomObject: PSJira => SimplifiedHierarchyLevel' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug


        $PSO = [PSCustomObject]@{
            "aboveLevelId" = ${AboveLevelId}
            "belowLevelId" = ${BelowLevelId}
            "externalUuid" = ${ExternalUuid}
            "hierarchyLevelNumber" = ${HierarchyLevelNumber}
            "id" = ${Id}
            "issueTypeIds" = ${IssueTypeIds}
            "level" = ${Level}
            "name" = ${Name}
            "projectConfigurationId" = ${ProjectConfigurationId}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to SimplifiedHierarchyLevel<PSCustomObject>

.DESCRIPTION

Convert from JSON to SimplifiedHierarchyLevel<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

SimplifiedHierarchyLevel<PSCustomObject>
#>
function ConvertFrom-JsonToSimplifiedHierarchyLevel {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSJira => SimplifiedHierarchyLevel' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in SimplifiedHierarchyLevel
        $AllProperties = ("aboveLevelId", "belowLevelId", "externalUuid", "hierarchyLevelNumber", "id", "issueTypeIds", "level", "name", "projectConfigurationId")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "aboveLevelId"))) { #optional property not found
            $AboveLevelId = $null
        } else {
            $AboveLevelId = $JsonParameters.PSobject.Properties["aboveLevelId"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "belowLevelId"))) { #optional property not found
            $BelowLevelId = $null
        } else {
            $BelowLevelId = $JsonParameters.PSobject.Properties["belowLevelId"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "externalUuid"))) { #optional property not found
            $ExternalUuid = $null
        } else {
            $ExternalUuid = $JsonParameters.PSobject.Properties["externalUuid"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "hierarchyLevelNumber"))) { #optional property not found
            $HierarchyLevelNumber = $null
        } else {
            $HierarchyLevelNumber = $JsonParameters.PSobject.Properties["hierarchyLevelNumber"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "id"))) { #optional property not found
            $Id = $null
        } else {
            $Id = $JsonParameters.PSobject.Properties["id"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "issueTypeIds"))) { #optional property not found
            $IssueTypeIds = $null
        } else {
            $IssueTypeIds = $JsonParameters.PSobject.Properties["issueTypeIds"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "level"))) { #optional property not found
            $Level = $null
        } else {
            $Level = $JsonParameters.PSobject.Properties["level"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "name"))) { #optional property not found
            $Name = $null
        } else {
            $Name = $JsonParameters.PSobject.Properties["name"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "projectConfigurationId"))) { #optional property not found
            $ProjectConfigurationId = $null
        } else {
            $ProjectConfigurationId = $JsonParameters.PSobject.Properties["projectConfigurationId"].value
        }

        $PSO = [PSCustomObject]@{
            "aboveLevelId" = ${AboveLevelId}
            "belowLevelId" = ${BelowLevelId}
            "externalUuid" = ${ExternalUuid}
            "hierarchyLevelNumber" = ${HierarchyLevelNumber}
            "id" = ${Id}
            "issueTypeIds" = ${IssueTypeIds}
            "level" = ${Level}
            "name" = ${Name}
            "projectConfigurationId" = ${ProjectConfigurationId}
        }

        return $PSO
    }

}

