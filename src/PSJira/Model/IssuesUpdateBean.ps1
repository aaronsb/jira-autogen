#
# The Jira Cloud platform REST API
# Jira Cloud platform REST API documentation
# Version: 1001.0.0-SNAPSHOT-23ad6c5456aade2d59a4e9437ce49c945df2eb8f
# Contact: ecosystem@atlassian.com
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

No description available.

.PARAMETER IssueUpdates
No description available.
.OUTPUTS

IssuesUpdateBean<PSCustomObject>
#>

function Initialize-IssuesUpdateBean {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [PSCustomObject[]]
        ${IssueUpdates}
    )

    Process {
        'Creating PSCustomObject: PSJira => IssuesUpdateBean' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug


        $PSO = [PSCustomObject]@{
            "issueUpdates" = ${IssueUpdates}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to IssuesUpdateBean<PSCustomObject>

.DESCRIPTION

Convert from JSON to IssuesUpdateBean<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

IssuesUpdateBean<PSCustomObject>
#>
function ConvertFrom-JsonToIssuesUpdateBean {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSJira => IssuesUpdateBean' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json
        $IssuesUpdateBeanAdditionalProperties = @{}

        # check if Json contains properties not defined in IssuesUpdateBean
        $AllProperties = ("issueUpdates")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            # store undefined properties in additionalProperties
            if (!($AllProperties.Contains($name))) {
                $IssuesUpdateBeanAdditionalProperties[$name] = $JsonParameters.PSobject.Properties[$name].value
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "issueUpdates"))) { #optional property not found
            $IssueUpdates = $null
        } else {
            $IssueUpdates = $JsonParameters.PSobject.Properties["issueUpdates"].value
        }

        $PSO = [PSCustomObject]@{
            "issueUpdates" = ${IssueUpdates}
            "AdditionalProperties" = $IssuesUpdateBeanAdditionalProperties
        }

        return $PSO
    }

}

