#
# The Jira Cloud platform REST API
# Jira Cloud platform REST API documentation
# Version: 1001.0.0-SNAPSHOT-23ad6c5456aade2d59a4e9437ce49c945df2eb8f
# Contact: ecosystem@atlassian.com
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

The configuration of the rule.

.PARAMETER Id
The ID of the rule.
.PARAMETER Parameters
The parameters related to the rule.
.PARAMETER RuleKey
The rule key of the rule.
.OUTPUTS

WorkflowRuleConfiguration<PSCustomObject>
#>

function Initialize-WorkflowRuleConfiguration {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${Id},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [System.Collections.Hashtable]
        ${Parameters},
        [Parameter(Position = 2, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${RuleKey}
    )

    Process {
        'Creating PSCustomObject: PSJira => WorkflowRuleConfiguration' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        if ($null -eq $RuleKey) {
            throw "invalid value for 'RuleKey', 'RuleKey' cannot be null."
        }


        $PSO = [PSCustomObject]@{
            "id" = ${Id}
            "parameters" = ${Parameters}
            "ruleKey" = ${RuleKey}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to WorkflowRuleConfiguration<PSCustomObject>

.DESCRIPTION

Convert from JSON to WorkflowRuleConfiguration<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

WorkflowRuleConfiguration<PSCustomObject>
#>
function ConvertFrom-JsonToWorkflowRuleConfiguration {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSJira => WorkflowRuleConfiguration' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in WorkflowRuleConfiguration
        $AllProperties = ("id", "parameters", "ruleKey")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        If ([string]::IsNullOrEmpty($Json) -or $Json -eq "{}") { # empty json
            throw "Error! Empty JSON cannot be serialized due to the required property 'ruleKey' missing."
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "ruleKey"))) {
            throw "Error! JSON cannot be serialized due to the required property 'ruleKey' missing."
        } else {
            $RuleKey = $JsonParameters.PSobject.Properties["ruleKey"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "id"))) { #optional property not found
            $Id = $null
        } else {
            $Id = $JsonParameters.PSobject.Properties["id"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "parameters"))) { #optional property not found
            $Parameters = $null
        } else {
            $Parameters = $JsonParameters.PSobject.Properties["parameters"].value
        }

        $PSO = [PSCustomObject]@{
            "id" = ${Id}
            "parameters" = ${Parameters}
            "ruleKey" = ${RuleKey}
        }

        return $PSO
    }

}

