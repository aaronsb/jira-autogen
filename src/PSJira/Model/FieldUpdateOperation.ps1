#
# The Jira Cloud platform REST API
# Jira Cloud platform REST API documentation
# Version: 1001.0.0-SNAPSHOT-23ad6c5456aade2d59a4e9437ce49c945df2eb8f
# Contact: ecosystem@atlassian.com
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

Details of an operation to perform on a field.

.PARAMETER Add
The value to add to the field.
.PARAMETER Copy
The field value to copy from another issue.
.PARAMETER Edit
The value to edit in the field.
.PARAMETER Remove
The value to removed from the field.
.PARAMETER Set
The value to set in the field.
.OUTPUTS

FieldUpdateOperation<PSCustomObject>
#>

function Initialize-FieldUpdateOperation {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [PSCustomObject]
        ${Add},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [PSCustomObject]
        ${Copy},
        [Parameter(Position = 2, ValueFromPipelineByPropertyName = $true)]
        [PSCustomObject]
        ${Edit},
        [Parameter(Position = 3, ValueFromPipelineByPropertyName = $true)]
        [PSCustomObject]
        ${Remove},
        [Parameter(Position = 4, ValueFromPipelineByPropertyName = $true)]
        [PSCustomObject]
        ${Set}
    )

    Process {
        'Creating PSCustomObject: PSJira => FieldUpdateOperation' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug


        $PSO = [PSCustomObject]@{
            "add" = ${Add}
            "copy" = ${Copy}
            "edit" = ${Edit}
            "remove" = ${Remove}
            "set" = ${Set}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to FieldUpdateOperation<PSCustomObject>

.DESCRIPTION

Convert from JSON to FieldUpdateOperation<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

FieldUpdateOperation<PSCustomObject>
#>
function ConvertFrom-JsonToFieldUpdateOperation {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSJira => FieldUpdateOperation' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in FieldUpdateOperation
        $AllProperties = ("add", "copy", "edit", "remove", "set")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "add"))) { #optional property not found
            $Add = $null
        } else {
            $Add = $JsonParameters.PSobject.Properties["add"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "copy"))) { #optional property not found
            $Copy = $null
        } else {
            $Copy = $JsonParameters.PSobject.Properties["copy"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "edit"))) { #optional property not found
            $Edit = $null
        } else {
            $Edit = $JsonParameters.PSobject.Properties["edit"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "remove"))) { #optional property not found
            $Remove = $null
        } else {
            $Remove = $JsonParameters.PSobject.Properties["remove"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "set"))) { #optional property not found
            $Set = $null
        } else {
            $Set = $JsonParameters.PSobject.Properties["set"].value
        }

        $PSO = [PSCustomObject]@{
            "add" = ${Add}
            "copy" = ${Copy}
            "edit" = ${Edit}
            "remove" = ${Remove}
            "set" = ${Set}
        }

        return $PSO
    }

}

