#
# The Jira Cloud platform REST API
# Jira Cloud platform REST API documentation
# Version: 1001.0.0-SNAPSHOT-23ad6c5456aade2d59a4e9437ce49c945df2eb8f
# Contact: ecosystem@atlassian.com
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

Details about the project.

.PARAMETER AssigneeType
The default assignee when creating issues for this project.
.PARAMETER AvatarId
An integer value for the project's avatar.
.PARAMETER CategoryId
The ID of the project's category. A complete list of category IDs is found using the [Get all project categories](#api-rest-api-3-projectCategory-get) operation.
.PARAMETER Description
A brief description of the project.
.PARAMETER FieldConfigurationScheme
The ID of the field configuration scheme for the project. Use the [Get all field configuration schemes](#api-rest-api-3-fieldconfigurationscheme-get) operation to get a list of field configuration scheme IDs. If you specify the field configuration scheme you cannot specify the project template key.
.PARAMETER IssueSecurityScheme
The ID of the issue security scheme for the project, which enables you to control who can and cannot view issues. Use the [Get issue security schemes](#api-rest-api-3-issuesecurityschemes-get) resource to get all issue security scheme IDs.
.PARAMETER IssueTypeScheme
The ID of the issue type scheme for the project. Use the [Get all issue type schemes](#api-rest-api-3-issuetypescheme-get) operation to get a list of issue type scheme IDs. If you specify the issue type scheme you cannot specify the project template key.
.PARAMETER IssueTypeScreenScheme
The ID of the issue type screen scheme for the project. Use the [Get all issue type screen schemes](#api-rest-api-3-issuetypescreenscheme-get) operation to get a list of issue type screen scheme IDs. If you specify the issue type screen scheme you cannot specify the project template key.
.PARAMETER Key
Project keys must be unique and start with an uppercase letter followed by one or more uppercase alphanumeric characters. The maximum length is 10 characters.
.PARAMETER Lead
This parameter is deprecated because of privacy changes. Use `leadAccountId` instead. See the [migration guide](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details. The user name of the project lead. Either `lead` or `leadAccountId` must be set when creating a project. Cannot be provided with `leadAccountId`.
.PARAMETER LeadAccountId
The account ID of the project lead. Either `lead` or `leadAccountId` must be set when creating a project. Cannot be provided with `lead`.
.PARAMETER Name
The name of the project.
.PARAMETER NotificationScheme
The ID of the notification scheme for the project. Use the [Get notification schemes](#api-rest-api-3-notificationscheme-get) resource to get a list of notification scheme IDs.
.PARAMETER PermissionScheme
The ID of the permission scheme for the project. Use the [Get all permission schemes](#api-rest-api-3-permissionscheme-get) resource to see a list of all permission scheme IDs.
.PARAMETER ProjectTemplateKey
A predefined configuration for a project. The type of the `projectTemplateKey` must match with the type of the `projectTypeKey`.
.PARAMETER ProjectTypeKey
The [project type](https://confluence.atlassian.com/x/GwiiLQ#Jiraapplicationsoverview-Productfeaturesandprojecttypes), which defines the application-specific feature set. If you don't specify the project template you have to specify the project type.
.PARAMETER Url
A link to information about this project, such as project documentation
.PARAMETER WorkflowScheme
The ID of the workflow scheme for the project. Use the [Get all workflow schemes](#api-rest-api-3-workflowscheme-get) operation to get a list of workflow scheme IDs. If you specify the workflow scheme you cannot specify the project template key.
.OUTPUTS

CreateProjectDetails<PSCustomObject>
#>

function Initialize-CreateProjectDetails {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [ValidateSet("PROJECT_LEAD", "UNASSIGNED")]
        [String]
        ${AssigneeType},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int64]]
        ${AvatarId},
        [Parameter(Position = 2, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int64]]
        ${CategoryId},
        [Parameter(Position = 3, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${Description},
        [Parameter(Position = 4, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int64]]
        ${FieldConfigurationScheme},
        [Parameter(Position = 5, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int64]]
        ${IssueSecurityScheme},
        [Parameter(Position = 6, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int64]]
        ${IssueTypeScheme},
        [Parameter(Position = 7, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int64]]
        ${IssueTypeScreenScheme},
        [Parameter(Position = 8, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${Key},
        [Parameter(Position = 9, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${Lead},
        [Parameter(Position = 10, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${LeadAccountId},
        [Parameter(Position = 11, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${Name},
        [Parameter(Position = 12, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int64]]
        ${NotificationScheme},
        [Parameter(Position = 13, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int64]]
        ${PermissionScheme},
        [Parameter(Position = 14, ValueFromPipelineByPropertyName = $true)]
        [ValidateSet("com.pyxis.greenhopper.jira:gh-simplified-agility-kanban", "com.pyxis.greenhopper.jira:gh-simplified-agility-scrum", "com.pyxis.greenhopper.jira:gh-simplified-basic", "com.pyxis.greenhopper.jira:gh-simplified-kanban-classic", "com.pyxis.greenhopper.jira:gh-simplified-scrum-classic", "com.pyxis.greenhopper.jira:gh-cross-team-template", "com.pyxis.greenhopper.jira:gh-cross-team-planning-template", "com.atlassian.servicedesk:simplified-it-service-management", "com.atlassian.servicedesk:simplified-general-service-desk", "com.atlassian.servicedesk:simplified-general-service-desk-it", "com.atlassian.servicedesk:simplified-general-service-desk-business", "com.atlassian.servicedesk:simplified-internal-service-desk", "com.atlassian.servicedesk:simplified-external-service-desk", "com.atlassian.servicedesk:simplified-hr-service-desk", "com.atlassian.servicedesk:simplified-facilities-service-desk", "com.atlassian.servicedesk:simplified-legal-service-desk", "com.atlassian.servicedesk:simplified-marketing-service-desk", "com.atlassian.servicedesk:simplified-finance-service-desk", "com.atlassian.servicedesk:simplified-analytics-service-desk", "com.atlassian.servicedesk:simplified-design-service-desk", "com.atlassian.servicedesk:simplified-sales-service-desk", "com.atlassian.servicedesk:simplified-halp-service-desk", "com.atlassian.servicedesk:simplified-blank-project-it", "com.atlassian.servicedesk:simplified-blank-project-business", "com.atlassian.servicedesk:next-gen-it-service-desk", "com.atlassian.servicedesk:next-gen-hr-service-desk", "com.atlassian.servicedesk:next-gen-legal-service-desk", "com.atlassian.servicedesk:next-gen-marketing-service-desk", "com.atlassian.servicedesk:next-gen-facilities-service-desk", "com.atlassian.servicedesk:next-gen-general-service-desk", "com.atlassian.servicedesk:next-gen-general-it-service-desk", "com.atlassian.servicedesk:next-gen-general-business-service-desk", "com.atlassian.servicedesk:next-gen-analytics-service-desk", "com.atlassian.servicedesk:next-gen-finance-service-desk", "com.atlassian.servicedesk:next-gen-design-service-desk", "com.atlassian.servicedesk:next-gen-sales-service-desk", "com.atlassian.jira-core-project-templates:jira-core-simplified-content-management", "com.atlassian.jira-core-project-templates:jira-core-simplified-document-approval", "com.atlassian.jira-core-project-templates:jira-core-simplified-lead-tracking", "com.atlassian.jira-core-project-templates:jira-core-simplified-process-control", "com.atlassian.jira-core-project-templates:jira-core-simplified-procurement", "com.atlassian.jira-core-project-templates:jira-core-simplified-project-management", "com.atlassian.jira-core-project-templates:jira-core-simplified-recruitment", "com.atlassian.jira-core-project-templates:jira-core-simplified-task-")]
        [String]
        ${ProjectTemplateKey},
        [Parameter(Position = 15, ValueFromPipelineByPropertyName = $true)]
        [ValidateSet("software", "service_desk", "business")]
        [String]
        ${ProjectTypeKey},
        [Parameter(Position = 16, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${Url},
        [Parameter(Position = 17, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int64]]
        ${WorkflowScheme}
    )

    Process {
        'Creating PSCustomObject: PSJira => CreateProjectDetails' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        if ($null -eq $Key) {
            throw "invalid value for 'Key', 'Key' cannot be null."
        }

        if (!$LeadAccountId -and $LeadAccountId.length -gt 128) {
            throw "invalid value for 'LeadAccountId', the character length must be smaller than or equal to 128."
        }

        if ($null -eq $Name) {
            throw "invalid value for 'Name', 'Name' cannot be null."
        }


        $PSO = [PSCustomObject]@{
            "assigneeType" = ${AssigneeType}
            "avatarId" = ${AvatarId}
            "categoryId" = ${CategoryId}
            "description" = ${Description}
            "fieldConfigurationScheme" = ${FieldConfigurationScheme}
            "issueSecurityScheme" = ${IssueSecurityScheme}
            "issueTypeScheme" = ${IssueTypeScheme}
            "issueTypeScreenScheme" = ${IssueTypeScreenScheme}
            "key" = ${Key}
            "lead" = ${Lead}
            "leadAccountId" = ${LeadAccountId}
            "name" = ${Name}
            "notificationScheme" = ${NotificationScheme}
            "permissionScheme" = ${PermissionScheme}
            "projectTemplateKey" = ${ProjectTemplateKey}
            "projectTypeKey" = ${ProjectTypeKey}
            "url" = ${Url}
            "workflowScheme" = ${WorkflowScheme}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to CreateProjectDetails<PSCustomObject>

.DESCRIPTION

Convert from JSON to CreateProjectDetails<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

CreateProjectDetails<PSCustomObject>
#>
function ConvertFrom-JsonToCreateProjectDetails {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSJira => CreateProjectDetails' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in CreateProjectDetails
        $AllProperties = ("assigneeType", "avatarId", "categoryId", "description", "fieldConfigurationScheme", "issueSecurityScheme", "issueTypeScheme", "issueTypeScreenScheme", "key", "lead", "leadAccountId", "name", "notificationScheme", "permissionScheme", "projectTemplateKey", "projectTypeKey", "url", "workflowScheme")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        If ([string]::IsNullOrEmpty($Json) -or $Json -eq "{}") { # empty json
            throw "Error! Empty JSON cannot be serialized due to the required property 'key' missing."
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "key"))) {
            throw "Error! JSON cannot be serialized due to the required property 'key' missing."
        } else {
            $Key = $JsonParameters.PSobject.Properties["key"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "name"))) {
            throw "Error! JSON cannot be serialized due to the required property 'name' missing."
        } else {
            $Name = $JsonParameters.PSobject.Properties["name"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "assigneeType"))) { #optional property not found
            $AssigneeType = $null
        } else {
            $AssigneeType = $JsonParameters.PSobject.Properties["assigneeType"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "avatarId"))) { #optional property not found
            $AvatarId = $null
        } else {
            $AvatarId = $JsonParameters.PSobject.Properties["avatarId"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "categoryId"))) { #optional property not found
            $CategoryId = $null
        } else {
            $CategoryId = $JsonParameters.PSobject.Properties["categoryId"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "description"))) { #optional property not found
            $Description = $null
        } else {
            $Description = $JsonParameters.PSobject.Properties["description"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "fieldConfigurationScheme"))) { #optional property not found
            $FieldConfigurationScheme = $null
        } else {
            $FieldConfigurationScheme = $JsonParameters.PSobject.Properties["fieldConfigurationScheme"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "issueSecurityScheme"))) { #optional property not found
            $IssueSecurityScheme = $null
        } else {
            $IssueSecurityScheme = $JsonParameters.PSobject.Properties["issueSecurityScheme"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "issueTypeScheme"))) { #optional property not found
            $IssueTypeScheme = $null
        } else {
            $IssueTypeScheme = $JsonParameters.PSobject.Properties["issueTypeScheme"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "issueTypeScreenScheme"))) { #optional property not found
            $IssueTypeScreenScheme = $null
        } else {
            $IssueTypeScreenScheme = $JsonParameters.PSobject.Properties["issueTypeScreenScheme"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "lead"))) { #optional property not found
            $Lead = $null
        } else {
            $Lead = $JsonParameters.PSobject.Properties["lead"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "leadAccountId"))) { #optional property not found
            $LeadAccountId = $null
        } else {
            $LeadAccountId = $JsonParameters.PSobject.Properties["leadAccountId"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "notificationScheme"))) { #optional property not found
            $NotificationScheme = $null
        } else {
            $NotificationScheme = $JsonParameters.PSobject.Properties["notificationScheme"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "permissionScheme"))) { #optional property not found
            $PermissionScheme = $null
        } else {
            $PermissionScheme = $JsonParameters.PSobject.Properties["permissionScheme"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "projectTemplateKey"))) { #optional property not found
            $ProjectTemplateKey = $null
        } else {
            $ProjectTemplateKey = $JsonParameters.PSobject.Properties["projectTemplateKey"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "projectTypeKey"))) { #optional property not found
            $ProjectTypeKey = $null
        } else {
            $ProjectTypeKey = $JsonParameters.PSobject.Properties["projectTypeKey"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "url"))) { #optional property not found
            $Url = $null
        } else {
            $Url = $JsonParameters.PSobject.Properties["url"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "workflowScheme"))) { #optional property not found
            $WorkflowScheme = $null
        } else {
            $WorkflowScheme = $JsonParameters.PSobject.Properties["workflowScheme"].value
        }

        $PSO = [PSCustomObject]@{
            "assigneeType" = ${AssigneeType}
            "avatarId" = ${AvatarId}
            "categoryId" = ${CategoryId}
            "description" = ${Description}
            "fieldConfigurationScheme" = ${FieldConfigurationScheme}
            "issueSecurityScheme" = ${IssueSecurityScheme}
            "issueTypeScheme" = ${IssueTypeScheme}
            "issueTypeScreenScheme" = ${IssueTypeScreenScheme}
            "key" = ${Key}
            "lead" = ${Lead}
            "leadAccountId" = ${LeadAccountId}
            "name" = ${Name}
            "notificationScheme" = ${NotificationScheme}
            "permissionScheme" = ${PermissionScheme}
            "projectTemplateKey" = ${ProjectTemplateKey}
            "projectTypeKey" = ${ProjectTypeKey}
            "url" = ${Url}
            "workflowScheme" = ${WorkflowScheme}
        }

        return $PSO
    }

}

