#
# The Jira Cloud platform REST API
# Jira Cloud platform REST API documentation
# Version: 1001.0.0-SNAPSHOT-23ad6c5456aade2d59a4e9437ce49c945df2eb8f
# Contact: ecosystem@atlassian.com
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

Various counts of issues within a version.

.PARAMETER CustomFieldUsage
List of custom fields using the version.
.PARAMETER IssueCountWithCustomFieldsShowingVersion
Count of issues where a version custom field is set to the version.
.PARAMETER IssuesAffectedCount
Count of issues where the `affectedVersion` is set to the version.
.PARAMETER IssuesFixedCount
Count of issues where the `fixVersion` is set to the version.
.PARAMETER Self
The URL of these count details.
.OUTPUTS

VersionIssueCounts<PSCustomObject>
#>

function Initialize-VersionIssueCounts {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [PSCustomObject[]]
        ${CustomFieldUsage},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int64]]
        ${IssueCountWithCustomFieldsShowingVersion},
        [Parameter(Position = 2, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int64]]
        ${IssuesAffectedCount},
        [Parameter(Position = 3, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int64]]
        ${IssuesFixedCount},
        [Parameter(Position = 4, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${Self}
    )

    Process {
        'Creating PSCustomObject: PSJira => VersionIssueCounts' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug


        $PSO = [PSCustomObject]@{
            "customFieldUsage" = ${CustomFieldUsage}
            "issueCountWithCustomFieldsShowingVersion" = ${IssueCountWithCustomFieldsShowingVersion}
            "issuesAffectedCount" = ${IssuesAffectedCount}
            "issuesFixedCount" = ${IssuesFixedCount}
            "self" = ${Self}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to VersionIssueCounts<PSCustomObject>

.DESCRIPTION

Convert from JSON to VersionIssueCounts<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

VersionIssueCounts<PSCustomObject>
#>
function ConvertFrom-JsonToVersionIssueCounts {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSJira => VersionIssueCounts' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in VersionIssueCounts
        $AllProperties = ("customFieldUsage", "issueCountWithCustomFieldsShowingVersion", "issuesAffectedCount", "issuesFixedCount", "self")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "customFieldUsage"))) { #optional property not found
            $CustomFieldUsage = $null
        } else {
            $CustomFieldUsage = $JsonParameters.PSobject.Properties["customFieldUsage"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "issueCountWithCustomFieldsShowingVersion"))) { #optional property not found
            $IssueCountWithCustomFieldsShowingVersion = $null
        } else {
            $IssueCountWithCustomFieldsShowingVersion = $JsonParameters.PSobject.Properties["issueCountWithCustomFieldsShowingVersion"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "issuesAffectedCount"))) { #optional property not found
            $IssuesAffectedCount = $null
        } else {
            $IssuesAffectedCount = $JsonParameters.PSobject.Properties["issuesAffectedCount"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "issuesFixedCount"))) { #optional property not found
            $IssuesFixedCount = $null
        } else {
            $IssuesFixedCount = $JsonParameters.PSobject.Properties["issuesFixedCount"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "self"))) { #optional property not found
            $Self = $null
        } else {
            $Self = $JsonParameters.PSobject.Properties["self"].value
        }

        $PSO = [PSCustomObject]@{
            "customFieldUsage" = ${CustomFieldUsage}
            "issueCountWithCustomFieldsShowingVersion" = ${IssueCountWithCustomFieldsShowingVersion}
            "issuesAffectedCount" = ${IssuesAffectedCount}
            "issuesFixedCount" = ${IssuesFixedCount}
            "self" = ${Self}
        }

        return $PSO
    }

}

