#
# The Jira Cloud platform REST API
# Jira Cloud platform REST API documentation
# Version: 1001.0.0-SNAPSHOT-23ad6c5456aade2d59a4e9437ce49c945df2eb8f
# Contact: ecosystem@atlassian.com
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

The list of required status mappings by issue type.

.PARAMETER IssueTypeId
The ID of the issue type.
.PARAMETER StatusIds
The status IDs requiring mapping.
.OUTPUTS

RequiredMappingByIssueType<PSCustomObject>
#>

function Initialize-RequiredMappingByIssueType {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${IssueTypeId},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [String[]]
        ${StatusIds}
    )

    Process {
        'Creating PSCustomObject: PSJira => RequiredMappingByIssueType' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug


        $PSO = [PSCustomObject]@{
            "issueTypeId" = ${IssueTypeId}
            "statusIds" = ${StatusIds}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to RequiredMappingByIssueType<PSCustomObject>

.DESCRIPTION

Convert from JSON to RequiredMappingByIssueType<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

RequiredMappingByIssueType<PSCustomObject>
#>
function ConvertFrom-JsonToRequiredMappingByIssueType {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSJira => RequiredMappingByIssueType' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in RequiredMappingByIssueType
        $AllProperties = ("issueTypeId", "statusIds")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "issueTypeId"))) { #optional property not found
            $IssueTypeId = $null
        } else {
            $IssueTypeId = $JsonParameters.PSobject.Properties["issueTypeId"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "statusIds"))) { #optional property not found
            $StatusIds = $null
        } else {
            $StatusIds = $JsonParameters.PSobject.Properties["statusIds"].value
        }

        $PSO = [PSCustomObject]@{
            "issueTypeId" = ${IssueTypeId}
            "statusIds" = ${StatusIds}
        }

        return $PSO
    }

}

