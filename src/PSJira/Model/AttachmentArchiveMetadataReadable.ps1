#
# The Jira Cloud platform REST API
# Jira Cloud platform REST API documentation
# Version: 1001.0.0-SNAPSHOT-23ad6c5456aade2d59a4e9437ce49c945df2eb8f
# Contact: ecosystem@atlassian.com
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

Metadata for an archive (for example a zip) and its contents.

.PARAMETER Entries
The list of the items included in the archive.
.PARAMETER Id
The ID of the attachment.
.PARAMETER MediaType
The MIME type of the attachment.
.PARAMETER Name
The name of the archive file.
.PARAMETER TotalEntryCount
The number of items included in the archive.
.OUTPUTS

AttachmentArchiveMetadataReadable<PSCustomObject>
#>

function Initialize-AttachmentArchiveMetadataReadable {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [PSCustomObject[]]
        ${Entries},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int64]]
        ${Id},
        [Parameter(Position = 2, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${MediaType},
        [Parameter(Position = 3, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${Name},
        [Parameter(Position = 4, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int64]]
        ${TotalEntryCount}
    )

    Process {
        'Creating PSCustomObject: PSJira => AttachmentArchiveMetadataReadable' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug


        $PSO = [PSCustomObject]@{
            "entries" = ${Entries}
            "id" = ${Id}
            "mediaType" = ${MediaType}
            "name" = ${Name}
            "totalEntryCount" = ${TotalEntryCount}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to AttachmentArchiveMetadataReadable<PSCustomObject>

.DESCRIPTION

Convert from JSON to AttachmentArchiveMetadataReadable<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

AttachmentArchiveMetadataReadable<PSCustomObject>
#>
function ConvertFrom-JsonToAttachmentArchiveMetadataReadable {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSJira => AttachmentArchiveMetadataReadable' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in AttachmentArchiveMetadataReadable
        $AllProperties = ("entries", "id", "mediaType", "name", "totalEntryCount")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "entries"))) { #optional property not found
            $Entries = $null
        } else {
            $Entries = $JsonParameters.PSobject.Properties["entries"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "id"))) { #optional property not found
            $Id = $null
        } else {
            $Id = $JsonParameters.PSobject.Properties["id"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "mediaType"))) { #optional property not found
            $MediaType = $null
        } else {
            $MediaType = $JsonParameters.PSobject.Properties["mediaType"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "name"))) { #optional property not found
            $Name = $null
        } else {
            $Name = $JsonParameters.PSobject.Properties["name"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "totalEntryCount"))) { #optional property not found
            $TotalEntryCount = $null
        } else {
            $TotalEntryCount = $JsonParameters.PSobject.Properties["totalEntryCount"].value
        }

        $PSO = [PSCustomObject]@{
            "entries" = ${Entries}
            "id" = ${Id}
            "mediaType" = ${MediaType}
            "name" = ${Name}
            "totalEntryCount" = ${TotalEntryCount}
        }

        return $PSO
    }

}

