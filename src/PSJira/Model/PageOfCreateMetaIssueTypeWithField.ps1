#
# The Jira Cloud platform REST API
# Jira Cloud platform REST API documentation
# Version: 1001.0.0-SNAPSHOT-23ad6c5456aade2d59a4e9437ce49c945df2eb8f
# Contact: ecosystem@atlassian.com
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

A page of CreateMetaIssueType with Field.

.PARAMETER Fields
The collection of FieldCreateMetaBeans.
.PARAMETER MaxResults
The maximum number of items to return per page.
.PARAMETER Results
No description available.
.PARAMETER StartAt
The index of the first item returned.
.PARAMETER Total
The total number of items in all pages.
.OUTPUTS

PageOfCreateMetaIssueTypeWithField<PSCustomObject>
#>

function Initialize-PageOfCreateMetaIssueTypeWithField {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [PSCustomObject[]]
        ${Fields},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int32]]
        ${MaxResults},
        [Parameter(Position = 2, ValueFromPipelineByPropertyName = $true)]
        [PSCustomObject[]]
        ${Results},
        [Parameter(Position = 3, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int64]]
        ${StartAt},
        [Parameter(Position = 4, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int64]]
        ${Total}
    )

    Process {
        'Creating PSCustomObject: PSJira => PageOfCreateMetaIssueTypeWithField' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug


        $PSO = [PSCustomObject]@{
            "fields" = ${Fields}
            "maxResults" = ${MaxResults}
            "results" = ${Results}
            "startAt" = ${StartAt}
            "total" = ${Total}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to PageOfCreateMetaIssueTypeWithField<PSCustomObject>

.DESCRIPTION

Convert from JSON to PageOfCreateMetaIssueTypeWithField<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

PageOfCreateMetaIssueTypeWithField<PSCustomObject>
#>
function ConvertFrom-JsonToPageOfCreateMetaIssueTypeWithField {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSJira => PageOfCreateMetaIssueTypeWithField' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json
        $PageOfCreateMetaIssueTypeWithFieldAdditionalProperties = @{}

        # check if Json contains properties not defined in PageOfCreateMetaIssueTypeWithField
        $AllProperties = ("fields", "maxResults", "results", "startAt", "total")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            # store undefined properties in additionalProperties
            if (!($AllProperties.Contains($name))) {
                $PageOfCreateMetaIssueTypeWithFieldAdditionalProperties[$name] = $JsonParameters.PSobject.Properties[$name].value
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "fields"))) { #optional property not found
            $Fields = $null
        } else {
            $Fields = $JsonParameters.PSobject.Properties["fields"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "maxResults"))) { #optional property not found
            $MaxResults = $null
        } else {
            $MaxResults = $JsonParameters.PSobject.Properties["maxResults"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "results"))) { #optional property not found
            $Results = $null
        } else {
            $Results = $JsonParameters.PSobject.Properties["results"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "startAt"))) { #optional property not found
            $StartAt = $null
        } else {
            $StartAt = $JsonParameters.PSobject.Properties["startAt"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "total"))) { #optional property not found
            $Total = $null
        } else {
            $Total = $JsonParameters.PSobject.Properties["total"].value
        }

        $PSO = [PSCustomObject]@{
            "fields" = ${Fields}
            "maxResults" = ${MaxResults}
            "results" = ${Results}
            "startAt" = ${StartAt}
            "total" = ${Total}
            "AdditionalProperties" = $PageOfCreateMetaIssueTypeWithFieldAdditionalProperties
        }

        return $PSO
    }

}

