#
# The Jira Cloud platform REST API
# Jira Cloud platform REST API documentation
# Version: 1001.0.0-SNAPSHOT-23ad6c5456aade2d59a4e9437ce49c945df2eb8f
# Contact: ecosystem@atlassian.com
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

Result of your JQL search. Returns a list of issue IDs and a token to fetch the next page if one exists.

.PARAMETER IssueIds
The list of issue IDs found by the search.
.PARAMETER NextPageToken
Continuation token to fetch the next page. If this result represents the last or the only page this token will be null.
.OUTPUTS

IdSearchResults<PSCustomObject>
#>

function Initialize-IdSearchResults {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [Int64[]]
        ${IssueIds},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${NextPageToken}
    )

    Process {
        'Creating PSCustomObject: PSJira => IdSearchResults' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug


        $PSO = [PSCustomObject]@{
            "issueIds" = ${IssueIds}
            "nextPageToken" = ${NextPageToken}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to IdSearchResults<PSCustomObject>

.DESCRIPTION

Convert from JSON to IdSearchResults<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

IdSearchResults<PSCustomObject>
#>
function ConvertFrom-JsonToIdSearchResults {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSJira => IdSearchResults' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in IdSearchResults
        $AllProperties = ("issueIds", "nextPageToken")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "issueIds"))) { #optional property not found
            $IssueIds = $null
        } else {
            $IssueIds = $JsonParameters.PSobject.Properties["issueIds"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "nextPageToken"))) { #optional property not found
            $NextPageToken = $null
        } else {
            $NextPageToken = $JsonParameters.PSobject.Properties["nextPageToken"].value
        }

        $PSO = [PSCustomObject]@{
            "issueIds" = ${IssueIds}
            "nextPageToken" = ${NextPageToken}
        }

        return $PSO
    }

}

