#
# The Jira Cloud platform REST API
# Jira Cloud platform REST API documentation
# Version: 1001.0.0-SNAPSHOT-23ad6c5456aade2d59a4e9437ce49c945df2eb8f
# Contact: ecosystem@atlassian.com
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

No description available.

.PARAMETER Jql
A [JQL](https://confluence.atlassian.com/x/egORLQ) expression. Order by clauses are not allowed.
.PARAMETER MaxResults
The maximum number of items to return per page.
.PARAMETER NextPageToken
The continuation token to fetch the next page. This token is provided by the response of this endpoint.
.OUTPUTS

IdSearchRequestBean<PSCustomObject>
#>

function Initialize-IdSearchRequestBean {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${Jql},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int32]]
        ${MaxResults} = 1000,
        [Parameter(Position = 2, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${NextPageToken}
    )

    Process {
        'Creating PSCustomObject: PSJira => IdSearchRequestBean' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug


        $PSO = [PSCustomObject]@{
            "jql" = ${Jql}
            "maxResults" = ${MaxResults}
            "nextPageToken" = ${NextPageToken}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to IdSearchRequestBean<PSCustomObject>

.DESCRIPTION

Convert from JSON to IdSearchRequestBean<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

IdSearchRequestBean<PSCustomObject>
#>
function ConvertFrom-JsonToIdSearchRequestBean {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSJira => IdSearchRequestBean' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in IdSearchRequestBean
        $AllProperties = ("jql", "maxResults", "nextPageToken")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "jql"))) { #optional property not found
            $Jql = $null
        } else {
            $Jql = $JsonParameters.PSobject.Properties["jql"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "maxResults"))) { #optional property not found
            $MaxResults = $null
        } else {
            $MaxResults = $JsonParameters.PSobject.Properties["maxResults"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "nextPageToken"))) { #optional property not found
            $NextPageToken = $null
        } else {
            $NextPageToken = $JsonParameters.PSobject.Properties["nextPageToken"].value
        }

        $PSO = [PSCustomObject]@{
            "jql" = ${Jql}
            "maxResults" = ${MaxResults}
            "nextPageToken" = ${NextPageToken}
        }

        return $PSO
    }

}

