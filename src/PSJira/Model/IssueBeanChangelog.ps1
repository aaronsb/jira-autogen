#
# The Jira Cloud platform REST API
# Jira Cloud platform REST API documentation
# Version: 1001.0.0-SNAPSHOT-23ad6c5456aade2d59a4e9437ce49c945df2eb8f
# Contact: ecosystem@atlassian.com
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

Details of changelogs associated with the issue.

.PARAMETER Histories
The list of changelogs.
.PARAMETER MaxResults
The maximum number of results that could be on the page.
.PARAMETER StartAt
The index of the first item returned on the page.
.PARAMETER Total
The number of results on the page.
.OUTPUTS

IssueBeanChangelog<PSCustomObject>
#>

function Initialize-IssueBeanChangelog {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [PSCustomObject[]]
        ${Histories},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int32]]
        ${MaxResults},
        [Parameter(Position = 2, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int32]]
        ${StartAt},
        [Parameter(Position = 3, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int32]]
        ${Total}
    )

    Process {
        'Creating PSCustomObject: PSJira => IssueBeanChangelog' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug


        $PSO = [PSCustomObject]@{
            "histories" = ${Histories}
            "maxResults" = ${MaxResults}
            "startAt" = ${StartAt}
            "total" = ${Total}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to IssueBeanChangelog<PSCustomObject>

.DESCRIPTION

Convert from JSON to IssueBeanChangelog<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

IssueBeanChangelog<PSCustomObject>
#>
function ConvertFrom-JsonToIssueBeanChangelog {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSJira => IssueBeanChangelog' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in IssueBeanChangelog
        $AllProperties = ("histories", "maxResults", "startAt", "total")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "histories"))) { #optional property not found
            $Histories = $null
        } else {
            $Histories = $JsonParameters.PSobject.Properties["histories"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "maxResults"))) { #optional property not found
            $MaxResults = $null
        } else {
            $MaxResults = $JsonParameters.PSobject.Properties["maxResults"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "startAt"))) { #optional property not found
            $StartAt = $null
        } else {
            $StartAt = $JsonParameters.PSobject.Properties["startAt"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "total"))) { #optional property not found
            $Total = $null
        } else {
            $Total = $JsonParameters.PSobject.Properties["total"].value
        }

        $PSO = [PSCustomObject]@{
            "histories" = ${Histories}
            "maxResults" = ${MaxResults}
            "startAt" = ${StartAt}
            "total" = ${Total}
        }

        return $PSO
    }

}

