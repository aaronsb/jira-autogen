#
# The Jira Cloud platform REST API
# Jira Cloud platform REST API documentation
# Version: 1001.0.0-SNAPSHOT-23ad6c5456aade2d59a4e9437ce49c945df2eb8f
# Contact: ecosystem@atlassian.com
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

A page containing dashboard details.

.PARAMETER Dashboards
List of dashboards.
.PARAMETER MaxResults
The maximum number of results that could be on the page.
.PARAMETER Next
The URL of the next page of results, if any.
.PARAMETER Prev
The URL of the previous page of results, if any.
.PARAMETER StartAt
The index of the first item returned on the page.
.PARAMETER Total
The number of results on the page.
.OUTPUTS

PageOfDashboards<PSCustomObject>
#>

function Initialize-PageOfDashboards {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [PSCustomObject[]]
        ${Dashboards},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int32]]
        ${MaxResults},
        [Parameter(Position = 2, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${Next},
        [Parameter(Position = 3, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${Prev},
        [Parameter(Position = 4, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int32]]
        ${StartAt},
        [Parameter(Position = 5, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int32]]
        ${Total}
    )

    Process {
        'Creating PSCustomObject: PSJira => PageOfDashboards' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug


        $PSO = [PSCustomObject]@{
            "dashboards" = ${Dashboards}
            "maxResults" = ${MaxResults}
            "next" = ${Next}
            "prev" = ${Prev}
            "startAt" = ${StartAt}
            "total" = ${Total}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to PageOfDashboards<PSCustomObject>

.DESCRIPTION

Convert from JSON to PageOfDashboards<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

PageOfDashboards<PSCustomObject>
#>
function ConvertFrom-JsonToPageOfDashboards {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSJira => PageOfDashboards' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in PageOfDashboards
        $AllProperties = ("dashboards", "maxResults", "next", "prev", "startAt", "total")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "dashboards"))) { #optional property not found
            $Dashboards = $null
        } else {
            $Dashboards = $JsonParameters.PSobject.Properties["dashboards"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "maxResults"))) { #optional property not found
            $MaxResults = $null
        } else {
            $MaxResults = $JsonParameters.PSobject.Properties["maxResults"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "next"))) { #optional property not found
            $Next = $null
        } else {
            $Next = $JsonParameters.PSobject.Properties["next"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "prev"))) { #optional property not found
            $Prev = $null
        } else {
            $Prev = $JsonParameters.PSobject.Properties["prev"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "startAt"))) { #optional property not found
            $StartAt = $null
        } else {
            $StartAt = $JsonParameters.PSobject.Properties["startAt"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "total"))) { #optional property not found
            $Total = $null
        } else {
            $Total = $JsonParameters.PSobject.Properties["total"].value
        }

        $PSO = [PSCustomObject]@{
            "dashboards" = ${Dashboards}
            "maxResults" = ${MaxResults}
            "next" = ${Next}
            "prev" = ${Prev}
            "startAt" = ${StartAt}
            "total" = ${Total}
        }

        return $PSO
    }

}

