#
# The Jira Cloud platform REST API
# Jira Cloud platform REST API documentation
# Version: 1001.0.0-SNAPSHOT-23ad6c5456aade2d59a4e9437ce49c945df2eb8f
# Contact: ecosystem@atlassian.com
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

The statuses associated with this workflow.

.PARAMETER Layout
No description available.
.PARAMETER Properties
The properties for this status layout.
.PARAMETER StatusReference
A unique ID which the status will use to refer to this layout configuration.
.OUTPUTS

StatusLayoutUpdate<PSCustomObject>
#>

function Initialize-StatusLayoutUpdate {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [PSCustomObject]
        ${Layout},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [System.Collections.Hashtable]
        ${Properties},
        [Parameter(Position = 2, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${StatusReference}
    )

    Process {
        'Creating PSCustomObject: PSJira => StatusLayoutUpdate' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        if ($null -eq $Properties) {
            throw "invalid value for 'Properties', 'Properties' cannot be null."
        }

        if ($null -eq $StatusReference) {
            throw "invalid value for 'StatusReference', 'StatusReference' cannot be null."
        }


        $PSO = [PSCustomObject]@{
            "layout" = ${Layout}
            "properties" = ${Properties}
            "statusReference" = ${StatusReference}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to StatusLayoutUpdate<PSCustomObject>

.DESCRIPTION

Convert from JSON to StatusLayoutUpdate<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

StatusLayoutUpdate<PSCustomObject>
#>
function ConvertFrom-JsonToStatusLayoutUpdate {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSJira => StatusLayoutUpdate' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json
        $StatusLayoutUpdateAdditionalProperties = @{}

        # check if Json contains properties not defined in StatusLayoutUpdate
        $AllProperties = ("layout", "properties", "statusReference")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            # store undefined properties in additionalProperties
            if (!($AllProperties.Contains($name))) {
                $StatusLayoutUpdateAdditionalProperties[$name] = $JsonParameters.PSobject.Properties[$name].value
            }
        }

        If ([string]::IsNullOrEmpty($Json) -or $Json -eq "{}") { # empty json
            throw "Error! Empty JSON cannot be serialized due to the required property 'properties' missing."
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "properties"))) {
            throw "Error! JSON cannot be serialized due to the required property 'properties' missing."
        } else {
            $Properties = $JsonParameters.PSobject.Properties["properties"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "statusReference"))) {
            throw "Error! JSON cannot be serialized due to the required property 'statusReference' missing."
        } else {
            $StatusReference = $JsonParameters.PSobject.Properties["statusReference"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "layout"))) { #optional property not found
            $Layout = $null
        } else {
            $Layout = $JsonParameters.PSobject.Properties["layout"].value
        }

        $PSO = [PSCustomObject]@{
            "layout" = ${Layout}
            "properties" = ${Properties}
            "statusReference" = ${StatusReference}
            "AdditionalProperties" = $StatusLayoutUpdateAdditionalProperties
        }

        return $PSO
    }

}

