#
# The Jira Cloud platform REST API
# Jira Cloud platform REST API documentation
# Version: 1001.0.0-SNAPSHOT-23ad6c5456aade2d59a4e9437ce49c945df2eb8f
# Contact: ecosystem@atlassian.com
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

Details of notifications which should be added to the notification scheme.

.PARAMETER NotificationSchemeEvents
The list of notifications which should be added to the notification scheme.
.OUTPUTS

AddNotificationsDetails<PSCustomObject>
#>

function Initialize-AddNotificationsDetails {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [PSCustomObject[]]
        ${NotificationSchemeEvents}
    )

    Process {
        'Creating PSCustomObject: PSJira => AddNotificationsDetails' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        if ($null -eq $NotificationSchemeEvents) {
            throw "invalid value for 'NotificationSchemeEvents', 'NotificationSchemeEvents' cannot be null."
        }


        $PSO = [PSCustomObject]@{
            "notificationSchemeEvents" = ${NotificationSchemeEvents}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to AddNotificationsDetails<PSCustomObject>

.DESCRIPTION

Convert from JSON to AddNotificationsDetails<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

AddNotificationsDetails<PSCustomObject>
#>
function ConvertFrom-JsonToAddNotificationsDetails {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSJira => AddNotificationsDetails' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json
        $AddNotificationsDetailsAdditionalProperties = @{}

        # check if Json contains properties not defined in AddNotificationsDetails
        $AllProperties = ("notificationSchemeEvents")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            # store undefined properties in additionalProperties
            if (!($AllProperties.Contains($name))) {
                $AddNotificationsDetailsAdditionalProperties[$name] = $JsonParameters.PSobject.Properties[$name].value
            }
        }

        If ([string]::IsNullOrEmpty($Json) -or $Json -eq "{}") { # empty json
            throw "Error! Empty JSON cannot be serialized due to the required property 'notificationSchemeEvents' missing."
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "notificationSchemeEvents"))) {
            throw "Error! JSON cannot be serialized due to the required property 'notificationSchemeEvents' missing."
        } else {
            $NotificationSchemeEvents = $JsonParameters.PSobject.Properties["notificationSchemeEvents"].value
        }

        $PSO = [PSCustomObject]@{
            "notificationSchemeEvents" = ${NotificationSchemeEvents}
            "AdditionalProperties" = $AddNotificationsDetailsAdditionalProperties
        }

        return $PSO
    }

}

