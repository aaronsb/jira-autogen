#
# The Jira Cloud platform REST API
# Jira Cloud platform REST API documentation
# Version: 1001.0.0-SNAPSHOT-23ad6c5456aade2d59a4e9437ce49c945df2eb8f
# Contact: ecosystem@atlassian.com
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

Time tracking details.

.PARAMETER OriginalEstimate
The original estimate of time needed for this issue in readable format.
.PARAMETER OriginalEstimateSeconds
The original estimate of time needed for this issue in seconds.
.PARAMETER RemainingEstimate
The remaining estimate of time needed for this issue in readable format.
.PARAMETER RemainingEstimateSeconds
The remaining estimate of time needed for this issue in seconds.
.PARAMETER TimeSpent
Time worked on this issue in readable format.
.PARAMETER TimeSpentSeconds
Time worked on this issue in seconds.
.OUTPUTS

TimeTrackingDetails<PSCustomObject>
#>

function Initialize-TimeTrackingDetails {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${OriginalEstimate},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int64]]
        ${OriginalEstimateSeconds},
        [Parameter(Position = 2, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${RemainingEstimate},
        [Parameter(Position = 3, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int64]]
        ${RemainingEstimateSeconds},
        [Parameter(Position = 4, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${TimeSpent},
        [Parameter(Position = 5, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int64]]
        ${TimeSpentSeconds}
    )

    Process {
        'Creating PSCustomObject: PSJira => TimeTrackingDetails' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug


        $PSO = [PSCustomObject]@{
            "originalEstimate" = ${OriginalEstimate}
            "originalEstimateSeconds" = ${OriginalEstimateSeconds}
            "remainingEstimate" = ${RemainingEstimate}
            "remainingEstimateSeconds" = ${RemainingEstimateSeconds}
            "timeSpent" = ${TimeSpent}
            "timeSpentSeconds" = ${TimeSpentSeconds}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to TimeTrackingDetails<PSCustomObject>

.DESCRIPTION

Convert from JSON to TimeTrackingDetails<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

TimeTrackingDetails<PSCustomObject>
#>
function ConvertFrom-JsonToTimeTrackingDetails {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSJira => TimeTrackingDetails' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in TimeTrackingDetails
        $AllProperties = ("originalEstimate", "originalEstimateSeconds", "remainingEstimate", "remainingEstimateSeconds", "timeSpent", "timeSpentSeconds")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "originalEstimate"))) { #optional property not found
            $OriginalEstimate = $null
        } else {
            $OriginalEstimate = $JsonParameters.PSobject.Properties["originalEstimate"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "originalEstimateSeconds"))) { #optional property not found
            $OriginalEstimateSeconds = $null
        } else {
            $OriginalEstimateSeconds = $JsonParameters.PSobject.Properties["originalEstimateSeconds"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "remainingEstimate"))) { #optional property not found
            $RemainingEstimate = $null
        } else {
            $RemainingEstimate = $JsonParameters.PSobject.Properties["remainingEstimate"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "remainingEstimateSeconds"))) { #optional property not found
            $RemainingEstimateSeconds = $null
        } else {
            $RemainingEstimateSeconds = $JsonParameters.PSobject.Properties["remainingEstimateSeconds"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "timeSpent"))) { #optional property not found
            $TimeSpent = $null
        } else {
            $TimeSpent = $JsonParameters.PSobject.Properties["timeSpent"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "timeSpentSeconds"))) { #optional property not found
            $TimeSpentSeconds = $null
        } else {
            $TimeSpentSeconds = $JsonParameters.PSobject.Properties["timeSpentSeconds"].value
        }

        $PSO = [PSCustomObject]@{
            "originalEstimate" = ${OriginalEstimate}
            "originalEstimateSeconds" = ${OriginalEstimateSeconds}
            "remainingEstimate" = ${RemainingEstimate}
            "remainingEstimateSeconds" = ${RemainingEstimateSeconds}
            "timeSpent" = ${TimeSpent}
            "timeSpentSeconds" = ${TimeSpentSeconds}
        }

        return $PSO
    }

}

