#
# The Jira Cloud platform REST API
# Jira Cloud platform REST API documentation
# Version: 1001.0.0-SNAPSHOT-23ad6c5456aade2d59a4e9437ce49c945df2eb8f
# Contact: ecosystem@atlassian.com
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

List issues archived within a specified date range.

.PARAMETER DateAfter
List issues archived after a specified date, passed in the YYYY-MM-DD format.
.PARAMETER DateBefore
List issues archived before a specified date provided in the YYYY-MM-DD format.
.OUTPUTS

DateRangeFilterRequest<PSCustomObject>
#>

function Initialize-DateRangeFilterRequest {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${DateAfter},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${DateBefore}
    )

    Process {
        'Creating PSCustomObject: PSJira => DateRangeFilterRequest' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        if ($null -eq $DateAfter) {
            throw "invalid value for 'DateAfter', 'DateAfter' cannot be null."
        }

        if ($null -eq $DateBefore) {
            throw "invalid value for 'DateBefore', 'DateBefore' cannot be null."
        }


        $PSO = [PSCustomObject]@{
            "dateAfter" = ${DateAfter}
            "dateBefore" = ${DateBefore}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to DateRangeFilterRequest<PSCustomObject>

.DESCRIPTION

Convert from JSON to DateRangeFilterRequest<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

DateRangeFilterRequest<PSCustomObject>
#>
function ConvertFrom-JsonToDateRangeFilterRequest {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSJira => DateRangeFilterRequest' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in DateRangeFilterRequest
        $AllProperties = ("dateAfter", "dateBefore")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        If ([string]::IsNullOrEmpty($Json) -or $Json -eq "{}") { # empty json
            throw "Error! Empty JSON cannot be serialized due to the required property 'dateAfter' missing."
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "dateAfter"))) {
            throw "Error! JSON cannot be serialized due to the required property 'dateAfter' missing."
        } else {
            $DateAfter = $JsonParameters.PSobject.Properties["dateAfter"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "dateBefore"))) {
            throw "Error! JSON cannot be serialized due to the required property 'dateBefore' missing."
        } else {
            $DateBefore = $JsonParameters.PSobject.Properties["dateBefore"].value
        }

        $PSO = [PSCustomObject]@{
            "dateAfter" = ${DateAfter}
            "dateBefore" = ${DateBefore}
        }

        return $PSO
    }

}

