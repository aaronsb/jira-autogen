#
# The Jira Cloud platform REST API
# Jira Cloud platform REST API documentation
# Version: 1001.0.0-SNAPSHOT-23ad6c5456aade2d59a4e9437ce49c945df2eb8f
# Contact: ecosystem@atlassian.com
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

Details of the instance's attachment settings.

.PARAMETER Enabled
Whether the ability to add attachments is enabled.
.PARAMETER UploadLimit
The maximum size of attachments permitted, in bytes.
.OUTPUTS

AttachmentSettings<PSCustomObject>
#>

function Initialize-AttachmentSettings {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Boolean]]
        ${Enabled},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int64]]
        ${UploadLimit}
    )

    Process {
        'Creating PSCustomObject: PSJira => AttachmentSettings' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug


        $PSO = [PSCustomObject]@{
            "enabled" = ${Enabled}
            "uploadLimit" = ${UploadLimit}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to AttachmentSettings<PSCustomObject>

.DESCRIPTION

Convert from JSON to AttachmentSettings<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

AttachmentSettings<PSCustomObject>
#>
function ConvertFrom-JsonToAttachmentSettings {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSJira => AttachmentSettings' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in AttachmentSettings
        $AllProperties = ("enabled", "uploadLimit")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "enabled"))) { #optional property not found
            $Enabled = $null
        } else {
            $Enabled = $JsonParameters.PSobject.Properties["enabled"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "uploadLimit"))) { #optional property not found
            $UploadLimit = $null
        } else {
            $UploadLimit = $JsonParameters.PSobject.Properties["uploadLimit"].value
        }

        $PSO = [PSCustomObject]@{
            "enabled" = ${Enabled}
            "uploadLimit" = ${UploadLimit}
        }

        return $PSO
    }

}

