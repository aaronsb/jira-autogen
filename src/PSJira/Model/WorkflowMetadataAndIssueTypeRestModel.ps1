#
# The Jira Cloud platform REST API
# Jira Cloud platform REST API documentation
# Version: 1001.0.0-SNAPSHOT-23ad6c5456aade2d59a4e9437ce49c945df2eb8f
# Contact: ecosystem@atlassian.com
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

The workflow metadata and issue type IDs which use this workflow.

.PARAMETER IssueTypeIds
The list of issue type IDs for the mapping.
.PARAMETER Workflow
No description available.
.OUTPUTS

WorkflowMetadataAndIssueTypeRestModel<PSCustomObject>
#>

function Initialize-WorkflowMetadataAndIssueTypeRestModel {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [String[]]
        ${IssueTypeIds},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [PSCustomObject]
        ${Workflow}
    )

    Process {
        'Creating PSCustomObject: PSJira => WorkflowMetadataAndIssueTypeRestModel' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        if ($null -eq $IssueTypeIds) {
            throw "invalid value for 'IssueTypeIds', 'IssueTypeIds' cannot be null."
        }

        if ($null -eq $Workflow) {
            throw "invalid value for 'Workflow', 'Workflow' cannot be null."
        }


        $PSO = [PSCustomObject]@{
            "issueTypeIds" = ${IssueTypeIds}
            "workflow" = ${Workflow}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to WorkflowMetadataAndIssueTypeRestModel<PSCustomObject>

.DESCRIPTION

Convert from JSON to WorkflowMetadataAndIssueTypeRestModel<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

WorkflowMetadataAndIssueTypeRestModel<PSCustomObject>
#>
function ConvertFrom-JsonToWorkflowMetadataAndIssueTypeRestModel {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSJira => WorkflowMetadataAndIssueTypeRestModel' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in WorkflowMetadataAndIssueTypeRestModel
        $AllProperties = ("issueTypeIds", "workflow")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        If ([string]::IsNullOrEmpty($Json) -or $Json -eq "{}") { # empty json
            throw "Error! Empty JSON cannot be serialized due to the required property 'issueTypeIds' missing."
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "issueTypeIds"))) {
            throw "Error! JSON cannot be serialized due to the required property 'issueTypeIds' missing."
        } else {
            $IssueTypeIds = $JsonParameters.PSobject.Properties["issueTypeIds"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "workflow"))) {
            throw "Error! JSON cannot be serialized due to the required property 'workflow' missing."
        } else {
            $Workflow = $JsonParameters.PSobject.Properties["workflow"].value
        }

        $PSO = [PSCustomObject]@{
            "issueTypeIds" = ${IssueTypeIds}
            "workflow" = ${Workflow}
        }

        return $PSO
    }

}

