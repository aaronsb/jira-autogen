#
# The Jira Cloud platform REST API
# Jira Cloud platform REST API documentation
# Version: 1001.0.0-SNAPSHOT-23ad6c5456aade2d59a4e9437ce49c945df2eb8f
# Contact: ecosystem@atlassian.com
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

Details of issue security scheme level new members.

.PARAMETER Members
The list of level members which should be added to the issue security scheme level.
.OUTPUTS

SecuritySchemeMembersRequest<PSCustomObject>
#>

function Initialize-SecuritySchemeMembersRequest {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [PSCustomObject[]]
        ${Members}
    )

    Process {
        'Creating PSCustomObject: PSJira => SecuritySchemeMembersRequest' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug


        $PSO = [PSCustomObject]@{
            "members" = ${Members}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to SecuritySchemeMembersRequest<PSCustomObject>

.DESCRIPTION

Convert from JSON to SecuritySchemeMembersRequest<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

SecuritySchemeMembersRequest<PSCustomObject>
#>
function ConvertFrom-JsonToSecuritySchemeMembersRequest {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSJira => SecuritySchemeMembersRequest' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in SecuritySchemeMembersRequest
        $AllProperties = ("members")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "members"))) { #optional property not found
            $Members = $null
        } else {
            $Members = $JsonParameters.PSobject.Properties["members"].value
        }

        $PSO = [PSCustomObject]@{
            "members" = ${Members}
        }

        return $PSO
    }

}

