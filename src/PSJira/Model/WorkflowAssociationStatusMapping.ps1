#
# The Jira Cloud platform REST API
# Jira Cloud platform REST API documentation
# Version: 1001.0.0-SNAPSHOT-23ad6c5456aade2d59a4e9437ce49c945df2eb8f
# Contact: ecosystem@atlassian.com
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

The list of status mappings.

.PARAMETER NewStatusId
The ID of the status in the new workflow.
.PARAMETER OldStatusId
The ID of the status in the old workflow that isn't present in the new workflow.
.OUTPUTS

WorkflowAssociationStatusMapping<PSCustomObject>
#>

function Initialize-WorkflowAssociationStatusMapping {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${NewStatusId},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${OldStatusId}
    )

    Process {
        'Creating PSCustomObject: PSJira => WorkflowAssociationStatusMapping' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        if ($null -eq $NewStatusId) {
            throw "invalid value for 'NewStatusId', 'NewStatusId' cannot be null."
        }

        if ($null -eq $OldStatusId) {
            throw "invalid value for 'OldStatusId', 'OldStatusId' cannot be null."
        }


        $PSO = [PSCustomObject]@{
            "newStatusId" = ${NewStatusId}
            "oldStatusId" = ${OldStatusId}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to WorkflowAssociationStatusMapping<PSCustomObject>

.DESCRIPTION

Convert from JSON to WorkflowAssociationStatusMapping<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

WorkflowAssociationStatusMapping<PSCustomObject>
#>
function ConvertFrom-JsonToWorkflowAssociationStatusMapping {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSJira => WorkflowAssociationStatusMapping' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in WorkflowAssociationStatusMapping
        $AllProperties = ("newStatusId", "oldStatusId")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        If ([string]::IsNullOrEmpty($Json) -or $Json -eq "{}") { # empty json
            throw "Error! Empty JSON cannot be serialized due to the required property 'newStatusId' missing."
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "newStatusId"))) {
            throw "Error! JSON cannot be serialized due to the required property 'newStatusId' missing."
        } else {
            $NewStatusId = $JsonParameters.PSobject.Properties["newStatusId"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "oldStatusId"))) {
            throw "Error! JSON cannot be serialized due to the required property 'oldStatusId' missing."
        } else {
            $OldStatusId = $JsonParameters.PSobject.Properties["oldStatusId"].value
        }

        $PSO = [PSCustomObject]@{
            "newStatusId" = ${NewStatusId}
            "oldStatusId" = ${OldStatusId}
        }

        return $PSO
    }

}

