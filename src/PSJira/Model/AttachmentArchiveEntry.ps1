#
# The Jira Cloud platform REST API
# Jira Cloud platform REST API documentation
# Version: 1001.0.0-SNAPSHOT-23ad6c5456aade2d59a4e9437ce49c945df2eb8f
# Contact: ecosystem@atlassian.com
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

No description available.

.PARAMETER AbbreviatedName
No description available.
.PARAMETER EntryIndex
No description available.
.PARAMETER MediaType
No description available.
.PARAMETER Name
No description available.
.PARAMETER Size
No description available.
.OUTPUTS

AttachmentArchiveEntry<PSCustomObject>
#>

function Initialize-AttachmentArchiveEntry {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${AbbreviatedName},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int64]]
        ${EntryIndex},
        [Parameter(Position = 2, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${MediaType},
        [Parameter(Position = 3, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${Name},
        [Parameter(Position = 4, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int64]]
        ${Size}
    )

    Process {
        'Creating PSCustomObject: PSJira => AttachmentArchiveEntry' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug


        $PSO = [PSCustomObject]@{
            "abbreviatedName" = ${AbbreviatedName}
            "entryIndex" = ${EntryIndex}
            "mediaType" = ${MediaType}
            "name" = ${Name}
            "size" = ${Size}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to AttachmentArchiveEntry<PSCustomObject>

.DESCRIPTION

Convert from JSON to AttachmentArchiveEntry<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

AttachmentArchiveEntry<PSCustomObject>
#>
function ConvertFrom-JsonToAttachmentArchiveEntry {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSJira => AttachmentArchiveEntry' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in AttachmentArchiveEntry
        $AllProperties = ("abbreviatedName", "entryIndex", "mediaType", "name", "size")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "abbreviatedName"))) { #optional property not found
            $AbbreviatedName = $null
        } else {
            $AbbreviatedName = $JsonParameters.PSobject.Properties["abbreviatedName"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "entryIndex"))) { #optional property not found
            $EntryIndex = $null
        } else {
            $EntryIndex = $JsonParameters.PSobject.Properties["entryIndex"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "mediaType"))) { #optional property not found
            $MediaType = $null
        } else {
            $MediaType = $JsonParameters.PSobject.Properties["mediaType"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "name"))) { #optional property not found
            $Name = $null
        } else {
            $Name = $JsonParameters.PSobject.Properties["name"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "size"))) { #optional property not found
            $Size = $null
        } else {
            $Size = $JsonParameters.PSobject.Properties["size"].value
        }

        $PSO = [PSCustomObject]@{
            "abbreviatedName" = ${AbbreviatedName}
            "entryIndex" = ${EntryIndex}
            "mediaType" = ${MediaType}
            "name" = ${Name}
            "size" = ${Size}
        }

        return $PSO
    }

}

