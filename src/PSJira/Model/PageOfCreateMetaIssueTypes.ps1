#
# The Jira Cloud platform REST API
# Jira Cloud platform REST API documentation
# Version: 1001.0.0-SNAPSHOT-23ad6c5456aade2d59a4e9437ce49c945df2eb8f
# Contact: ecosystem@atlassian.com
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

A page of CreateMetaIssueTypes.

.PARAMETER CreateMetaIssueType
No description available.
.PARAMETER IssueTypes
The list of CreateMetaIssueType.
.PARAMETER MaxResults
The maximum number of items to return per page.
.PARAMETER StartAt
The index of the first item returned.
.PARAMETER Total
The total number of items in all pages.
.OUTPUTS

PageOfCreateMetaIssueTypes<PSCustomObject>
#>

function Initialize-PageOfCreateMetaIssueTypes {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [PSCustomObject[]]
        ${CreateMetaIssueType},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [PSCustomObject[]]
        ${IssueTypes},
        [Parameter(Position = 2, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int32]]
        ${MaxResults},
        [Parameter(Position = 3, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int64]]
        ${StartAt},
        [Parameter(Position = 4, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int64]]
        ${Total}
    )

    Process {
        'Creating PSCustomObject: PSJira => PageOfCreateMetaIssueTypes' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug


        $PSO = [PSCustomObject]@{
            "createMetaIssueType" = ${CreateMetaIssueType}
            "issueTypes" = ${IssueTypes}
            "maxResults" = ${MaxResults}
            "startAt" = ${StartAt}
            "total" = ${Total}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to PageOfCreateMetaIssueTypes<PSCustomObject>

.DESCRIPTION

Convert from JSON to PageOfCreateMetaIssueTypes<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

PageOfCreateMetaIssueTypes<PSCustomObject>
#>
function ConvertFrom-JsonToPageOfCreateMetaIssueTypes {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSJira => PageOfCreateMetaIssueTypes' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json
        $PageOfCreateMetaIssueTypesAdditionalProperties = @{}

        # check if Json contains properties not defined in PageOfCreateMetaIssueTypes
        $AllProperties = ("createMetaIssueType", "issueTypes", "maxResults", "startAt", "total")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            # store undefined properties in additionalProperties
            if (!($AllProperties.Contains($name))) {
                $PageOfCreateMetaIssueTypesAdditionalProperties[$name] = $JsonParameters.PSobject.Properties[$name].value
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "createMetaIssueType"))) { #optional property not found
            $CreateMetaIssueType = $null
        } else {
            $CreateMetaIssueType = $JsonParameters.PSobject.Properties["createMetaIssueType"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "issueTypes"))) { #optional property not found
            $IssueTypes = $null
        } else {
            $IssueTypes = $JsonParameters.PSobject.Properties["issueTypes"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "maxResults"))) { #optional property not found
            $MaxResults = $null
        } else {
            $MaxResults = $JsonParameters.PSobject.Properties["maxResults"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "startAt"))) { #optional property not found
            $StartAt = $null
        } else {
            $StartAt = $JsonParameters.PSobject.Properties["startAt"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "total"))) { #optional property not found
            $Total = $null
        } else {
            $Total = $JsonParameters.PSobject.Properties["total"].value
        }

        $PSO = [PSCustomObject]@{
            "createMetaIssueType" = ${CreateMetaIssueType}
            "issueTypes" = ${IssueTypes}
            "maxResults" = ${MaxResults}
            "startAt" = ${StartAt}
            "total" = ${Total}
            "AdditionalProperties" = $PageOfCreateMetaIssueTypesAdditionalProperties
        }

        return $PSO
    }

}

