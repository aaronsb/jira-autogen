#
# The Jira Cloud platform REST API
# Jira Cloud platform REST API documentation
# Version: 1001.0.0-SNAPSHOT-23ad6c5456aade2d59a4e9437ce49c945df2eb8f
# Contact: ecosystem@atlassian.com
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

No description available.

.PARAMETER QueueCategory
No description available.
.PARAMETER QueueId
No description available.
.PARAMETER QueueName
No description available.
.OUTPUTS

ServiceManagementNavigationInfo<PSCustomObject>
#>

function Initialize-ServiceManagementNavigationInfo {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${QueueCategory},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int64]]
        ${QueueId},
        [Parameter(Position = 2, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${QueueName}
    )

    Process {
        'Creating PSCustomObject: PSJira => ServiceManagementNavigationInfo' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug


        $PSO = [PSCustomObject]@{
            "queueCategory" = ${QueueCategory}
            "queueId" = ${QueueId}
            "queueName" = ${QueueName}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to ServiceManagementNavigationInfo<PSCustomObject>

.DESCRIPTION

Convert from JSON to ServiceManagementNavigationInfo<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

ServiceManagementNavigationInfo<PSCustomObject>
#>
function ConvertFrom-JsonToServiceManagementNavigationInfo {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSJira => ServiceManagementNavigationInfo' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in ServiceManagementNavigationInfo
        $AllProperties = ("queueCategory", "queueId", "queueName")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "queueCategory"))) { #optional property not found
            $QueueCategory = $null
        } else {
            $QueueCategory = $JsonParameters.PSobject.Properties["queueCategory"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "queueId"))) { #optional property not found
            $QueueId = $null
        } else {
            $QueueId = $JsonParameters.PSobject.Properties["queueId"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "queueName"))) { #optional property not found
            $QueueName = $null
        } else {
            $QueueName = $JsonParameters.PSobject.Properties["queueName"].value
        }

        $PSO = [PSCustomObject]@{
            "queueCategory" = ${QueueCategory}
            "queueId" = ${QueueId}
            "queueName" = ${QueueName}
        }

        return $PSO
    }

}

