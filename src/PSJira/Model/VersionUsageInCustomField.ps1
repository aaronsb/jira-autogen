#
# The Jira Cloud platform REST API
# Jira Cloud platform REST API documentation
# Version: 1001.0.0-SNAPSHOT-23ad6c5456aade2d59a4e9437ce49c945df2eb8f
# Contact: ecosystem@atlassian.com
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

List of custom fields using the version.

.PARAMETER CustomFieldId
The ID of the custom field.
.PARAMETER FieldName
The name of the custom field.
.PARAMETER IssueCountWithVersionInCustomField
Count of the issues where the custom field contains the version.
.OUTPUTS

VersionUsageInCustomField<PSCustomObject>
#>

function Initialize-VersionUsageInCustomField {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int64]]
        ${CustomFieldId},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${FieldName},
        [Parameter(Position = 2, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int64]]
        ${IssueCountWithVersionInCustomField}
    )

    Process {
        'Creating PSCustomObject: PSJira => VersionUsageInCustomField' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug


        $PSO = [PSCustomObject]@{
            "customFieldId" = ${CustomFieldId}
            "fieldName" = ${FieldName}
            "issueCountWithVersionInCustomField" = ${IssueCountWithVersionInCustomField}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to VersionUsageInCustomField<PSCustomObject>

.DESCRIPTION

Convert from JSON to VersionUsageInCustomField<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

VersionUsageInCustomField<PSCustomObject>
#>
function ConvertFrom-JsonToVersionUsageInCustomField {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSJira => VersionUsageInCustomField' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in VersionUsageInCustomField
        $AllProperties = ("customFieldId", "fieldName", "issueCountWithVersionInCustomField")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "customFieldId"))) { #optional property not found
            $CustomFieldId = $null
        } else {
            $CustomFieldId = $JsonParameters.PSobject.Properties["customFieldId"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "fieldName"))) { #optional property not found
            $FieldName = $null
        } else {
            $FieldName = $JsonParameters.PSobject.Properties["fieldName"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "issueCountWithVersionInCustomField"))) { #optional property not found
            $IssueCountWithVersionInCustomField = $null
        } else {
            $IssueCountWithVersionInCustomField = $JsonParameters.PSobject.Properties["issueCountWithVersionInCustomField"].value
        }

        $PSO = [PSCustomObject]@{
            "customFieldId" = ${CustomFieldId}
            "fieldName" = ${FieldName}
            "issueCountWithVersionInCustomField" = ${IssueCountWithVersionInCustomField}
        }

        return $PSO
    }

}

