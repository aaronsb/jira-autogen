#
# The Jira Cloud platform REST API
# Jira Cloud platform REST API documentation
# Version: 1001.0.0-SNAPSHOT-23ad6c5456aade2d59a4e9437ce49c945df2eb8f
# Contact: ecosystem@atlassian.com
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

A page of failed webhooks.

.PARAMETER MaxResults
The maximum number of items on the page. If the list of values is shorter than this number, then there are no more pages.
.PARAMETER Next
The URL to the next page of results. Present only if the request returned at least one result.The next page may be empty at the time of receiving the response, but new failed webhooks may appear in time. You can save the URL to the next page and query for new results periodically (for example, every hour).
.PARAMETER Values
The list of webhooks.
.OUTPUTS

FailedWebhooks<PSCustomObject>
#>

function Initialize-FailedWebhooks {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [Int32]
        ${MaxResults},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${Next},
        [Parameter(Position = 2, ValueFromPipelineByPropertyName = $true)]
        [PSCustomObject[]]
        ${Values}
    )

    Process {
        'Creating PSCustomObject: PSJira => FailedWebhooks' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        if ($null -eq $MaxResults) {
            throw "invalid value for 'MaxResults', 'MaxResults' cannot be null."
        }

        if ($null -eq $Values) {
            throw "invalid value for 'Values', 'Values' cannot be null."
        }


        $PSO = [PSCustomObject]@{
            "maxResults" = ${MaxResults}
            "next" = ${Next}
            "values" = ${Values}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to FailedWebhooks<PSCustomObject>

.DESCRIPTION

Convert from JSON to FailedWebhooks<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

FailedWebhooks<PSCustomObject>
#>
function ConvertFrom-JsonToFailedWebhooks {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSJira => FailedWebhooks' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in FailedWebhooks
        $AllProperties = ("maxResults", "next", "values")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        If ([string]::IsNullOrEmpty($Json) -or $Json -eq "{}") { # empty json
            throw "Error! Empty JSON cannot be serialized due to the required property 'maxResults' missing."
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "maxResults"))) {
            throw "Error! JSON cannot be serialized due to the required property 'maxResults' missing."
        } else {
            $MaxResults = $JsonParameters.PSobject.Properties["maxResults"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "values"))) {
            throw "Error! JSON cannot be serialized due to the required property 'values' missing."
        } else {
            $Values = $JsonParameters.PSobject.Properties["values"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "next"))) { #optional property not found
            $Next = $null
        } else {
            $Next = $JsonParameters.PSobject.Properties["next"].value
        }

        $PSO = [PSCustomObject]@{
            "maxResults" = ${MaxResults}
            "next" = ${Next}
            "values" = ${Values}
        }

        return $PSO
    }

}

