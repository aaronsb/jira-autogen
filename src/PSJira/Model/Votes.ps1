#
# The Jira Cloud platform REST API
# Jira Cloud platform REST API documentation
# Version: 1001.0.0-SNAPSHOT-23ad6c5456aade2d59a4e9437ce49c945df2eb8f
# Contact: ecosystem@atlassian.com
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

The details of votes on an issue.

.PARAMETER HasVoted
Whether the user making this request has voted on the issue.
.PARAMETER Self
The URL of these issue vote details.
.PARAMETER Voters
List of the users who have voted on this issue. An empty list is returned when the calling user doesn't have the *View voters and watchers* project permission.
.PARAMETER Votes
The number of votes on the issue.
.OUTPUTS

Votes<PSCustomObject>
#>

function Initialize-Votes {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Boolean]]
        ${HasVoted},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${Self},
        [Parameter(Position = 2, ValueFromPipelineByPropertyName = $true)]
        [PSCustomObject[]]
        ${Voters},
        [Parameter(Position = 3, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int64]]
        ${Votes}
    )

    Process {
        'Creating PSCustomObject: PSJira => Votes' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug


        $PSO = [PSCustomObject]@{
            "hasVoted" = ${HasVoted}
            "self" = ${Self}
            "voters" = ${Voters}
            "votes" = ${Votes}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to Votes<PSCustomObject>

.DESCRIPTION

Convert from JSON to Votes<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

Votes<PSCustomObject>
#>
function ConvertFrom-JsonToVotes {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSJira => Votes' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in Votes
        $AllProperties = ("hasVoted", "self", "voters", "votes")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "hasVoted"))) { #optional property not found
            $HasVoted = $null
        } else {
            $HasVoted = $JsonParameters.PSobject.Properties["hasVoted"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "self"))) { #optional property not found
            $Self = $null
        } else {
            $Self = $JsonParameters.PSobject.Properties["self"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "voters"))) { #optional property not found
            $Voters = $null
        } else {
            $Voters = $JsonParameters.PSobject.Properties["voters"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "votes"))) { #optional property not found
            $Votes = $null
        } else {
            $Votes = $JsonParameters.PSobject.Properties["votes"].value
        }

        $PSO = [PSCustomObject]@{
            "hasVoted" = ${HasVoted}
            "self" = ${Self}
            "voters" = ${Voters}
            "votes" = ${Votes}
        }

        return $PSO
    }

}

