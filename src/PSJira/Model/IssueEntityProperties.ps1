#
# The Jira Cloud platform REST API
# Jira Cloud platform REST API documentation
# Version: 1001.0.0-SNAPSHOT-23ad6c5456aade2d59a4e9437ce49c945df2eb8f
# Contact: ecosystem@atlassian.com
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

Lists of issues and entity properties. See [Entity properties](https://developer.atlassian.com/cloud/jira/platform/jira-entity-properties/) for more information.

.PARAMETER EntitiesIds
A list of entity property IDs.
.PARAMETER Properties
A list of entity property keys and values.
.OUTPUTS

IssueEntityProperties<PSCustomObject>
#>

function Initialize-IssueEntityProperties {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [Int64[]]
        ${EntitiesIds},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [System.Collections.Hashtable]
        ${Properties}
    )

    Process {
        'Creating PSCustomObject: PSJira => IssueEntityProperties' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        if (!$EntitiesIds -and $EntitiesIds.length -gt 10000) {
            throw "invalid value for 'EntitiesIds', number of items must be less than or equal to 10000."
        }

        if (!$EntitiesIds -and $EntitiesIds.length -lt 1) {
            throw "invalid value for 'EntitiesIds', number of items must be greater than or equal to 1."
        }

        if (!$Properties -and $Properties.length -gt 10) {
            throw "invalid value for 'Properties', number of items must be less than or equal to 10."
        }

        if (!$Properties -and $Properties.length -lt 1) {
            throw "invalid value for 'Properties', number of items must be greater than or equal to 1."
        }


        $PSO = [PSCustomObject]@{
            "entitiesIds" = ${EntitiesIds}
            "properties" = ${Properties}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to IssueEntityProperties<PSCustomObject>

.DESCRIPTION

Convert from JSON to IssueEntityProperties<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

IssueEntityProperties<PSCustomObject>
#>
function ConvertFrom-JsonToIssueEntityProperties {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSJira => IssueEntityProperties' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in IssueEntityProperties
        $AllProperties = ("entitiesIds", "properties")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "entitiesIds"))) { #optional property not found
            $EntitiesIds = $null
        } else {
            $EntitiesIds = $JsonParameters.PSobject.Properties["entitiesIds"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "properties"))) { #optional property not found
            $Properties = $null
        } else {
            $Properties = $JsonParameters.PSobject.Properties["properties"].value
        }

        $PSO = [PSCustomObject]@{
            "entitiesIds" = ${EntitiesIds}
            "properties" = ${Properties}
        }

        return $PSO
    }

}

