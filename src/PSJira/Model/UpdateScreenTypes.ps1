#
# The Jira Cloud platform REST API
# Jira Cloud platform REST API documentation
# Version: 1001.0.0-SNAPSHOT-23ad6c5456aade2d59a4e9437ce49c945df2eb8f
# Contact: ecosystem@atlassian.com
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

The IDs of the screens for the screen types of the screen scheme.

.PARAMETER Create
The ID of the create screen. To remove the screen association, pass a null.
.PARAMETER Default
The ID of the default screen. When specified, must include a screen ID as a default screen is required.
.PARAMETER Edit
The ID of the edit screen. To remove the screen association, pass a null.
.PARAMETER View
The ID of the view screen. To remove the screen association, pass a null.
.OUTPUTS

UpdateScreenTypes<PSCustomObject>
#>

function Initialize-UpdateScreenTypes {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${Create},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${Default},
        [Parameter(Position = 2, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${Edit},
        [Parameter(Position = 3, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${View}
    )

    Process {
        'Creating PSCustomObject: PSJira => UpdateScreenTypes' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug


        $PSO = [PSCustomObject]@{
            "create" = ${Create}
            "default" = ${Default}
            "edit" = ${Edit}
            "view" = ${View}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to UpdateScreenTypes<PSCustomObject>

.DESCRIPTION

Convert from JSON to UpdateScreenTypes<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

UpdateScreenTypes<PSCustomObject>
#>
function ConvertFrom-JsonToUpdateScreenTypes {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSJira => UpdateScreenTypes' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in UpdateScreenTypes
        $AllProperties = ("create", "default", "edit", "view")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "create"))) { #optional property not found
            $Create = $null
        } else {
            $Create = $JsonParameters.PSobject.Properties["create"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "default"))) { #optional property not found
            $Default = $null
        } else {
            $Default = $JsonParameters.PSobject.Properties["default"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "edit"))) { #optional property not found
            $Edit = $null
        } else {
            $Edit = $JsonParameters.PSobject.Properties["edit"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "view"))) { #optional property not found
            $View = $null
        } else {
            $View = $JsonParameters.PSobject.Properties["view"].value
        }

        $PSO = [PSCustomObject]@{
            "create" = ${Create}
            "default" = ${Default}
            "edit" = ${Edit}
            "view" = ${View}
        }

        return $PSO
    }

}

