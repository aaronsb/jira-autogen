#
# The Jira Cloud platform REST API
# Jira Cloud platform REST API documentation
# Version: 1001.0.0-SNAPSHOT-23ad6c5456aade2d59a4e9437ce49c945df2eb8f
# Contact: ecosystem@atlassian.com
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

No description available.

.PARAMETER ProjectAndIssueTypes
The list of projects and issue types to query.
.PARAMETER WorkflowIds
The list of workflow IDs to query.
.PARAMETER WorkflowNames
The list of workflow names to query.
.OUTPUTS

WorkflowReadRequest<PSCustomObject>
#>

function Initialize-WorkflowReadRequest {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [PSCustomObject[]]
        ${ProjectAndIssueTypes},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [String[]]
        ${WorkflowIds},
        [Parameter(Position = 2, ValueFromPipelineByPropertyName = $true)]
        [String[]]
        ${WorkflowNames}
    )

    Process {
        'Creating PSCustomObject: PSJira => WorkflowReadRequest' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug


        $PSO = [PSCustomObject]@{
            "projectAndIssueTypes" = ${ProjectAndIssueTypes}
            "workflowIds" = ${WorkflowIds}
            "workflowNames" = ${WorkflowNames}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to WorkflowReadRequest<PSCustomObject>

.DESCRIPTION

Convert from JSON to WorkflowReadRequest<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

WorkflowReadRequest<PSCustomObject>
#>
function ConvertFrom-JsonToWorkflowReadRequest {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSJira => WorkflowReadRequest' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in WorkflowReadRequest
        $AllProperties = ("projectAndIssueTypes", "workflowIds", "workflowNames")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "projectAndIssueTypes"))) { #optional property not found
            $ProjectAndIssueTypes = $null
        } else {
            $ProjectAndIssueTypes = $JsonParameters.PSobject.Properties["projectAndIssueTypes"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "workflowIds"))) { #optional property not found
            $WorkflowIds = $null
        } else {
            $WorkflowIds = $JsonParameters.PSobject.Properties["workflowIds"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "workflowNames"))) { #optional property not found
            $WorkflowNames = $null
        } else {
            $WorkflowNames = $JsonParameters.PSobject.Properties["workflowNames"].value
        }

        $PSO = [PSCustomObject]@{
            "projectAndIssueTypes" = ${ProjectAndIssueTypes}
            "workflowIds" = ${WorkflowIds}
            "workflowNames" = ${WorkflowNames}
        }

        return $PSO
    }

}

