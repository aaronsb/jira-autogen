#
# The Jira Cloud platform REST API
# Jira Cloud platform REST API documentation
# Version: 1001.0.0-SNAPSHOT-23ad6c5456aade2d59a4e9437ce49c945df2eb8f
# Contact: ecosystem@atlassian.com
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

Details of project permissions and associated issues and projects to look up.

.PARAMETER Issues
List of issue IDs.
.PARAMETER Permissions
List of project permissions.
.PARAMETER Projects
List of project IDs.
.OUTPUTS

BulkProjectPermissions<PSCustomObject>
#>

function Initialize-BulkProjectPermissions {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [Int64[]]
        ${Issues},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [String[]]
        ${Permissions},
        [Parameter(Position = 2, ValueFromPipelineByPropertyName = $true)]
        [Int64[]]
        ${Projects}
    )

    Process {
        'Creating PSCustomObject: PSJira => BulkProjectPermissions' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        if ($null -eq $Permissions) {
            throw "invalid value for 'Permissions', 'Permissions' cannot be null."
        }


        $PSO = [PSCustomObject]@{
            "issues" = ${Issues}
            "permissions" = ${Permissions}
            "projects" = ${Projects}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to BulkProjectPermissions<PSCustomObject>

.DESCRIPTION

Convert from JSON to BulkProjectPermissions<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

BulkProjectPermissions<PSCustomObject>
#>
function ConvertFrom-JsonToBulkProjectPermissions {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSJira => BulkProjectPermissions' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in BulkProjectPermissions
        $AllProperties = ("issues", "permissions", "projects")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        If ([string]::IsNullOrEmpty($Json) -or $Json -eq "{}") { # empty json
            throw "Error! Empty JSON cannot be serialized due to the required property 'permissions' missing."
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "permissions"))) {
            throw "Error! JSON cannot be serialized due to the required property 'permissions' missing."
        } else {
            $Permissions = $JsonParameters.PSobject.Properties["permissions"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "issues"))) { #optional property not found
            $Issues = $null
        } else {
            $Issues = $JsonParameters.PSobject.Properties["issues"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "projects"))) { #optional property not found
            $Projects = $null
        } else {
            $Projects = $JsonParameters.PSobject.Properties["projects"].value
        }

        $PSO = [PSCustomObject]@{
            "issues" = ${Issues}
            "permissions" = ${Permissions}
            "projects" = ${Projects}
        }

        return $PSO
    }

}

