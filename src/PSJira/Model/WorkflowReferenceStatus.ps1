#
# The Jira Cloud platform REST API
# Jira Cloud platform REST API documentation
# Version: 1001.0.0-SNAPSHOT-23ad6c5456aade2d59a4e9437ce49c945df2eb8f
# Contact: ecosystem@atlassian.com
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

The statuses referenced in the workflow.

.PARAMETER Deprecated
Indicates if the status is deprecated.
.PARAMETER Layout
No description available.
.PARAMETER Properties
The properties associated with the status.
.PARAMETER StatusReference
The reference of the status.
.OUTPUTS

WorkflowReferenceStatus<PSCustomObject>
#>

function Initialize-WorkflowReferenceStatus {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Boolean]]
        ${Deprecated},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [PSCustomObject]
        ${Layout},
        [Parameter(Position = 2, ValueFromPipelineByPropertyName = $true)]
        [System.Collections.Hashtable]
        ${Properties},
        [Parameter(Position = 3, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${StatusReference}
    )

    Process {
        'Creating PSCustomObject: PSJira => WorkflowReferenceStatus' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug


        $PSO = [PSCustomObject]@{
            "deprecated" = ${Deprecated}
            "layout" = ${Layout}
            "properties" = ${Properties}
            "statusReference" = ${StatusReference}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to WorkflowReferenceStatus<PSCustomObject>

.DESCRIPTION

Convert from JSON to WorkflowReferenceStatus<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

WorkflowReferenceStatus<PSCustomObject>
#>
function ConvertFrom-JsonToWorkflowReferenceStatus {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSJira => WorkflowReferenceStatus' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in WorkflowReferenceStatus
        $AllProperties = ("deprecated", "layout", "properties", "statusReference")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "deprecated"))) { #optional property not found
            $Deprecated = $null
        } else {
            $Deprecated = $JsonParameters.PSobject.Properties["deprecated"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "layout"))) { #optional property not found
            $Layout = $null
        } else {
            $Layout = $JsonParameters.PSobject.Properties["layout"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "properties"))) { #optional property not found
            $Properties = $null
        } else {
            $Properties = $JsonParameters.PSobject.Properties["properties"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "statusReference"))) { #optional property not found
            $StatusReference = $null
        } else {
            $StatusReference = $JsonParameters.PSobject.Properties["statusReference"].value
        }

        $PSO = [PSCustomObject]@{
            "deprecated" = ${Deprecated}
            "layout" = ${Layout}
            "properties" = ${Properties}
            "statusReference" = ${StatusReference}
        }

        return $PSO
    }

}

