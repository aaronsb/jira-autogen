#
# The Jira Cloud platform REST API
# Jira Cloud platform REST API documentation
# Version: 1001.0.0-SNAPSHOT-23ad6c5456aade2d59a4e9437ce49c945df2eb8f
# Contact: ecosystem@atlassian.com
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

The details of a UI modification.

.PARAMETER Contexts
List of contexts of the UI modification. The maximum number of contexts is 1000. If provided, replaces all existing contexts.
.PARAMETER VarData
The data of the UI modification. The maximum size of the data is 50000 characters.
.PARAMETER Description
The description of the UI modification. The maximum length is 255 characters.
.PARAMETER Name
The name of the UI modification. The maximum length is 255 characters.
.OUTPUTS

UpdateUiModificationDetails<PSCustomObject>
#>

function Initialize-UpdateUiModificationDetails {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [PSCustomObject[]]
        ${Contexts},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${VarData},
        [Parameter(Position = 2, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${Description},
        [Parameter(Position = 3, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${Name}
    )

    Process {
        'Creating PSCustomObject: PSJira => UpdateUiModificationDetails' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug


        $PSO = [PSCustomObject]@{
            "contexts" = ${Contexts}
            "data" = ${VarData}
            "description" = ${Description}
            "name" = ${Name}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to UpdateUiModificationDetails<PSCustomObject>

.DESCRIPTION

Convert from JSON to UpdateUiModificationDetails<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

UpdateUiModificationDetails<PSCustomObject>
#>
function ConvertFrom-JsonToUpdateUiModificationDetails {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSJira => UpdateUiModificationDetails' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in UpdateUiModificationDetails
        $AllProperties = ("contexts", "data", "description", "name")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "contexts"))) { #optional property not found
            $Contexts = $null
        } else {
            $Contexts = $JsonParameters.PSobject.Properties["contexts"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "data"))) { #optional property not found
            $VarData = $null
        } else {
            $VarData = $JsonParameters.PSobject.Properties["data"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "description"))) { #optional property not found
            $Description = $null
        } else {
            $Description = $JsonParameters.PSobject.Properties["description"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "name"))) { #optional property not found
            $Name = $null
        } else {
            $Name = $JsonParameters.PSobject.Properties["name"].value
        }

        $PSO = [PSCustomObject]@{
            "contexts" = ${Contexts}
            "data" = ${VarData}
            "description" = ${Description}
            "name" = ${Name}
        }

        return $PSO
    }

}

