#
# The Jira Cloud platform REST API
# Jira Cloud platform REST API documentation
# Version: 1001.0.0-SNAPSHOT-23ad6c5456aade2d59a4e9437ce49c945df2eb8f
# Contact: ecosystem@atlassian.com
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

The converted JQL queries.

.PARAMETER QueriesWithUnknownUsers
List of queries containing user information that could not be mapped to an existing user
.PARAMETER QueryStrings
The list of converted query strings with account IDs in place of user identifiers.
.OUTPUTS

ConvertedJQLQueries<PSCustomObject>
#>

function Initialize-ConvertedJQLQueries {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [PSCustomObject[]]
        ${QueriesWithUnknownUsers},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [String[]]
        ${QueryStrings}
    )

    Process {
        'Creating PSCustomObject: PSJira => ConvertedJQLQueries' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug


        $PSO = [PSCustomObject]@{
            "queriesWithUnknownUsers" = ${QueriesWithUnknownUsers}
            "queryStrings" = ${QueryStrings}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to ConvertedJQLQueries<PSCustomObject>

.DESCRIPTION

Convert from JSON to ConvertedJQLQueries<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

ConvertedJQLQueries<PSCustomObject>
#>
function ConvertFrom-JsonToConvertedJQLQueries {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSJira => ConvertedJQLQueries' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in ConvertedJQLQueries
        $AllProperties = ("queriesWithUnknownUsers", "queryStrings")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "queriesWithUnknownUsers"))) { #optional property not found
            $QueriesWithUnknownUsers = $null
        } else {
            $QueriesWithUnknownUsers = $JsonParameters.PSobject.Properties["queriesWithUnknownUsers"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "queryStrings"))) { #optional property not found
            $QueryStrings = $null
        } else {
            $QueryStrings = $JsonParameters.PSobject.Properties["queryStrings"].value
        }

        $PSO = [PSCustomObject]@{
            "queriesWithUnknownUsers" = ${QueriesWithUnknownUsers}
            "queryStrings" = ${QueryStrings}
        }

        return $PSO
    }

}

